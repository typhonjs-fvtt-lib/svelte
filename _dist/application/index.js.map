{"version":3,"file":"index.js","sources":["../../src/application/internal/state-app/ApplicationState.js","../../src/application/internal/state-svelte/GetSvelteData.js","../../src/application/internal/state-reactive/SvelteReactive.js","../../src/application/internal/util/applicationShellContract.js","../../src/application/internal/util/isApplicationShell.js","../../src/application/internal/util/loadSvelteConfig.js","../../src/application/internal/TJSAppIndex.js","../../src/application/external/FoundryHMRSupport.js","../../src/application/SvelteApp.js","../../src/application/external/PopoutSupport.js","../../src/application/external/ThemeObserver.js","../../src/application/internal/state-dialog/TJSDialogData.js","../../src/application/TJSDialog.js","../../src/application/index.js"],"sourcesContent":["import { isObject }  from '#runtime/util/object';\n\n/**\n * Provides the ability the save / restore / serialize application state for positional and UI state such as minimized\n * status.\n */\nexport class ApplicationState\n{\n   /** @type {import('../../SvelteApp.js').SvelteApp} */\n   #application;\n\n   /**\n    * Stores the current save state key being restored by animating. When a restore is already being animated with the\n    * same name the subsequent restore animation is ignored.\n    *\n    * @type {string | undefined}\n    */\n   #currentRestoreKey;\n\n   /** @type {Map<string, import('../../types').SvelteAppNS.API.State.Data>} */\n   #dataSaved = new Map();\n\n   /**\n    * @param {import('../../SvelteApp.js').SvelteApp}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * Clears all saved application state.\n    */\n   clear()\n   {\n      this.#dataSaved.clear();\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {import('../../types').SvelteAppNS.API.State.Data} Passed in object with current application state.\n    */\n   current(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         beforeMinimized: this.#application?.position?.state.get({ name: '#beforeMinimized' }),\n         options: this.#application?.reactive?.toJSON(),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Gets any saved application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Saved data set name.\n    *\n    * @returns {import('../../types').SvelteAppNS.API.State.Data | undefined} Any saved application state.\n    */\n   get({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`[SvelteApp.state.get] error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} The saved application state names / keys.\n    */\n   keys()\n   {\n      return this.#dataSaved.keys();\n   }\n\n   /**\n    * Removes and returns any saved application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {import('../../types').SvelteAppNS.API.State.Data | undefined} Any saved application state.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`[SvelteApp.state.remove] error: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a previously saved application state by `name` returning the data. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link #runtime/svelte/store/position!TJSPosition.API.Animation.to} and the duration and easing name or function may be\n    * specified.\n    *\n    * @param {object}            options - Options.\n    *\n    * @param {string}            options.name - Saved data set name.\n    *\n    * @param {boolean}           [options.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('#runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function or easing\n    *        function name.\n    *\n    * @returns {import('../../types').SvelteAppNS.API.State.Data | undefined} Any saved application state.\n    */\n   restore({ name, remove = false, animateTo = false, duration = 0.1, ease = 'linear' })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`[SvelteApp.state.restore] error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         // Multiple invocations for animated restores are skipped when one is already in progress.\n         if (animateTo && name !== this.#currentRestoreKey)\n         {\n            // Track current restore key name.\n            this.#currentRestoreKey = name;\n\n            this.#setImpl(dataSaved, {\n               animateTo,\n               async: true,\n               duration,\n               ease\n            }).then(() =>\n            {\n               // Reset current restore key name for animation if the same as initial animation initiation.\n               if (name === this.#currentRestoreKey) { this.#currentRestoreKey = void 0; }\n            });\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to index this saved state.\n    *\n    * @returns {import('../../types').SvelteAppNS.API.State.Data} Current saved application state.\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`[SvelteApp.state.save] error: 'name' is not a string.`); }\n\n      const data = this.current(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Sets application state from the given `SvelteApp.API.State.Data` instance. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link #runtime/svelte/store/position!AnimationAPI.to} and the duration and easing name or function may be\n    * specified.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * @param {import('../../types').SvelteAppNS.API.State.Data}   data - Saved data set name.\n    *\n    * @param {object}         [options] - Optional parameters\n    *\n    * @param {boolean}        [options.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}         [options.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('#runtime/svelte/easing').EasingReference} [options.ease='linear'] - Easing function or easing\n    *        function name.\n    */\n   set(data, options = {})\n   {\n      this.#setImpl(data, { ...options, async: false });\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Sets application state from the given `SvelteApp.API.State.Data` instance. Several optional parameters are\n    * available to animate / tween to the new state. When `animateTo` is true an animation is scheduled via\n    * {@link #runtime/svelte/store/position!AnimationAPI.to} and the duration and easing name or function may be\n    * specified.\n    *\n    * Note: If serializing application state any minimized apps will use the before minimized state on initial render\n    * of the app as it is currently not possible to render apps with Foundry VTT core API in the minimized state.\n    *\n    * @privateRemarks\n    * TODO: THIS METHOD NEEDS TO BE REFACTORED WHEN TRL IS MADE INTO A STANDALONE FRAMEWORK.\n    *\n    * @param {import('../../types').SvelteAppNS.API.State.Data}   data - Saved data set name.\n    *\n    * @param {object}            [opts] - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=0.1] - Duration in seconds.\n    *\n    * @param {import('#runtime/svelte/easing').EasingReference} [opts.ease='linear'] - Easing function or easing\n    *        function name.\n    *\n    * @returns {undefined | Promise<void>} When asynchronous the animation Promise.\n    */\n   #setImpl(data, { async = false, animateTo = false, duration = 0.1, ease = 'linear' } = {})\n   {\n      if (!isObject(data))\n      {\n         throw new TypeError(`[SvelteApp.state.set] error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (!isObject(data?.position))\n      {\n         console.warn(`[SvelteApp.state.set] warning: 'data.position' is not an object.`);\n         return;\n      }\n\n      // TODO: TAKE NOTE THAT WE ARE ACCESSING A FOUNDRY APP v1 GETTER HERE TO DETERMINE IF APPLICATION IS RENDERED.\n      // TODO: THIS NEEDS TO BE REFACTORED WHEN CONVERTING TRL TO A GENERIC FRAMEWORK.\n      const rendered = application.rendered;\n\n      // Update data directly with no store or inline style updates.\n      if (animateTo)  // Animate to saved data.\n      {\n         if (!rendered)\n         {\n            console.warn(`[SvelteApp.state.set] warning: application is not rendered and 'animateTo' is true.`);\n            return;\n         }\n\n         // Provide special handling to potentially change transform origin as this parameter is not animated.\n         if (data.position.transformOrigin !== application.position.transformOrigin)\n         {\n            application.position.transformOrigin = data.position.transformOrigin;\n         }\n\n         if (isObject(data?.ui))\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n         }\n\n         const promise = application.position.animate.to(data.position, {\n            duration,\n            ease,\n            strategy: 'cancelAll'\n         }).finished.then(({ cancelled }) =>\n         {\n            if (cancelled) { return; }\n\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration: 0 });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n         });\n\n         // Return a Promise with the application that resolves after animation ends.\n         if (async) { return promise; }\n      }\n      else\n      {\n         if (rendered)\n         {\n            // Merge in saved options to application.\n            if (isObject(data?.options))\n            {\n               application?.reactive.mergeOptions(data.options);\n            }\n\n            if (isObject(data?.ui))\n            {\n               const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n               // Application is currently minimized and stored state is not, so reset minimized state without\n               // animation.\n               if (application?.reactive?.minimized && !minimized)\n               {\n                  application.maximize({ animate: false, duration: 0 });\n               }\n               else if (!application?.reactive?.minimized && minimized)\n               {\n                  application.minimize({ animate: false, duration });\n               }\n            }\n\n            if (isObject(data?.beforeMinimized))\n            {\n               application.position.state.set({ name: '#beforeMinimized', ...data.beforeMinimized });\n            }\n\n            // Default options is to set data for an immediate update.\n            application.position.set(data.position);\n         }\n         else\n         {\n            // When not rendered set position to the 'beforeMinimized' data if it exists otherwise set w/ 'position'.\n            // Currently, w/ Foundry core Application API it is impossible to initially render an app in the minimized\n            // state.\n\n            let positionData = data.position;\n\n            if (isObject(data.beforeMinimized))\n            {\n               // Take before minimized data.\n               positionData = data.beforeMinimized;\n\n               // Apply position left / top to before minimized data. This covers the case when an app is minimized,\n               // but then moved. This allows restoration of the before minimized parameters w/ the last position\n               // location.\n               positionData.left = data.position.left;\n               positionData.top = data.position.top;\n            }\n\n            application.position.set(positionData);\n         }\n      }\n   }\n}\n","/**\n * Provides a mechanism to retrieve and query all mounted Svelte components including the main application shell.\n *\n * @implements {import('../../types').SvelteAppNS.API.Svelte}\n */\nexport class GetSvelteData\n{\n   /** @type {import('svelte').SvelteComponent[] | null[]} */\n   #applicationShellHolder;\n\n   /** @type {import('./types').SvelteData[]} */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApp}.\n    *\n    * @param {import('svelte').SvelteComponent[] | null[]}  applicationShellHolder - A reference to the mounted app shell.\n    *\n    * @param {import('./types').SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted application shell.\n    *\n    * @returns {import('svelte').SvelteComponent} Any mounted application shell.\n    */\n   get appShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns any mounted application shell.\n    *\n    * @deprecated Use {@link GetSvelteData.appShell}; since `0.2.0` removal in `0.5.0`.\n    *\n    * @returns {import('svelte').SvelteComponent} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns mounted application shell data / config.\n    *\n    * @internal\n    *\n    * @returns {import('./types').SvelteData} Any mounted application shell data.\n    */\n   get appShellData() { return this.#svelteData[0]; }\n}\n","import { derived, writable }     from '#svelte/store';\n\nimport { subscribeIgnoreFirst }  from '#runtime/svelte/store/util';\n\nimport {\n   TJSSessionStorage,\n   TJSWebStorage }               from '#runtime/svelte/store/web-storage';\n\nimport { propertyStore }         from '#runtime/svelte/store/writable-derived';\n\nimport {\n   deepMerge,\n   safeAccess,\n   safeSet }                     from '#runtime/util/object';\n\n/**\n * API docs and description in {@link SvelteAppNS.API.Reactive}.\n */\nexport class SvelteReactive\n{\n   /**\n    * @type {import('../SvelteApp').SvelteApp}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /** @type {import('#runtime/svelte/store/web-storage').WebStorage} */\n   #sessionStorage;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {import('./types').StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {(this: void, updater: import('svelte/store').Updater<object>) => void}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {import('../SvelteApp').SvelteApp} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n      const optionsSessionStorage = application?.options?.sessionStorage;\n\n      if (optionsSessionStorage !== void 0 && !(optionsSessionStorage instanceof TJSWebStorage))\n      {\n         throw new TypeError(`'options.sessionStorage' is not an instance of TJSWebStorage.`);\n      }\n\n      // If no external web storage API instance is available then create a TJSSessionStorage instance.\n      this.#sessionStorage = optionsSessionStorage !== void 0 ? optionsSessionStorage : new TJSSessionStorage();\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {import('./types-local').SvelteReactiveStores | undefined} Internal methods to interact with Svelte\n    * stores.\n    *\n    * @package\n    * @internal\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiStateUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Store getters -----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {import('#runtime/svelte/store/web-storage').WebStorage} Returns WebStorage (session) instance.\n    */\n   get sessionStorage()\n   {\n      return this.#sessionStorage;\n   }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {import('../../types').SvelteAppNS.API.Reactive.AppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {import('../../types').SvelteAppNS.API.Reactive.UIState} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current active Window / WindowProxy UI state.\n    *\n    * @returns {Window} Active window UI state.\n    */\n   get activeWindow() { return this.#dataUIState.activeWindow ?? globalThis; }\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n   /**\n    * Sets the current active Window / WindowProxy UI state.\n    *\n    * Note: This is protected usage and used internally.\n    *\n    * @param {Window} activeWindow - Active Window / WindowProxy UI state.\n    *\n    * @hidden\n    */\n   set activeWindow(activeWindow)\n   {\n      // Note: when setting activeWindow to undefined `globalThis` is set. There isn't a great test for Window /\n      // WindowProxy, so check `toString`.\n      if (activeWindow === void 0 || activeWindow === null ||\n       (Object.prototype.toString.call(activeWindow) === '[object Window]'))\n      {\n         this.#storeUIStateUpdate((options) => deepMerge(options, { activeWindow: activeWindow ?? globalThis }));\n      }\n   }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the focusAuto app option.\n    *\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto() { return this.#application?.options?.focusAuto; }\n\n   /**\n    * Returns the focusKeep app option.\n    *\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep() { return this.#application?.options?.focusKeep; }\n\n   /**\n    * Returns the focusTrap app option.\n    *\n    * @returns {boolean} When true focus trapping / wrapping is enabled keeping focus inside app.\n    */\n   get focusTrap() { return this.#application?.options?.focusTrap; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the headerIcon app option.\n    *\n    * @returns {string|void} URL for header app icon.\n    */\n   get headerIcon() { return this.#application?.options?.headerIcon; }\n\n   /**\n    * Returns the headerNoTitleMinimized app option.\n    *\n    * @returns {boolean} When true removes the header title when minimized.\n    */\n   get headerNoTitleMinimized() { return this.#application?.options?.headerNoTitleMinimized; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * Returns the Foundry popOut state; {@link Application.popOut}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the positionable app option; {@link SvelteAppNS.Options.positionable}\n    *\n    * @returns {boolean} Positionable app option.\n    */\n   get positionable() { return this.#application?.options?.positionable; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the title accessor from the parent Application class; {@link Application.title}\n    *\n    * @privateRemarks\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.    *\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.focusAuto` which is reactive for application shells.\n    *\n    * @param {boolean}  focusAuto - Sets the focusAuto option.\n    */\n   set focusAuto(focusAuto)\n   {\n      if (typeof focusAuto === 'boolean') { this.setOptions('focusAuto', focusAuto); }\n   }\n\n   /**\n    * Sets `this.options.focusKeep` which is reactive for application shells.\n    *\n    * @param {boolean}  focusKeep - Sets the focusKeep option.\n    */\n   set focusKeep(focusKeep)\n   {\n      if (typeof focusKeep === 'boolean') { this.setOptions('focusKeep', focusKeep); }\n   }\n\n   /**\n    * Sets `this.options.focusTrap` which is reactive for application shells.\n    *\n    * @param {boolean}  focusTrap - Sets the focusTrap option.\n    */\n   set focusTrap(focusTrap)\n   {\n      if (typeof focusTrap === 'boolean') { this.setOptions('focusTrap', focusTrap); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.headerIcon` which is reactive for application shells.\n    *\n    * @param {string | undefined}  headerIcon - Sets the headerButtonNoLabel option.\n    */\n   set headerIcon(headerIcon)\n   {\n      if (headerIcon === void 0 || typeof headerIcon === 'string') { this.setOptions('headerIcon', headerIcon); }\n   }\n\n   /**\n    * Sets `this.options.headerNoTitleMinimized` which is reactive for application shells.\n    *\n    * @param {boolean}  headerNoTitleMinimized - Sets the headerNoTitleMinimized option.\n    */\n   set headerNoTitleMinimized(headerNoTitleMinimized)\n   {\n      if (typeof headerNoTitleMinimized === 'boolean')\n      {\n         this.setOptions('headerNoTitleMinimized', headerNoTitleMinimized);\n      }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.positionable` enabling / disabling {@link SvelteApp.position}.\n    *\n    * @param {boolean}  positionable - Sets the positionable option.\n    */\n   set positionable(positionable)\n   {\n      if (typeof positionable === 'boolean') { this.setOptions('positionable', positionable); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * Note: Will set empty string if title is undefined or null.\n    *\n    * @param {string | undefined | null}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string')\n      {\n         this.setOptions('title', title);\n      }\n      else if (title === void 0 || title === null)\n      {\n         this.setOptions('title', '');\n      }\n   }\n\n   // Reactive Options API -------------------------------------------------------------------------------------------\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally, if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value, { createMissing: true });\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Serializes the main {@link SvelteAppNS.Options} for common application state.\n    *\n    * @returns {import('../../types').SvelteAppNS.API.Reactive.Data} Common application state.\n    */\n   toJSON()\n   {\n      return {\n         draggable: this.#application?.options?.draggable ?? true,\n         focusAuto: this.#application?.options?.focusAuto ?? true,\n         focusKeep: this.#application?.options?.focusKeep ?? false,\n         focusTrap: this.#application?.options?.focusTrap ?? true,\n         headerButtonNoClose: this.#application?.options?.headerButtonNoClose ?? false,\n         headerButtonNoLabel: this.#application?.options?.headerButtonNoLabel ?? false,\n         headerNoTitleMinimized: this.#application?.options?.headerNoTitleMinimized ?? false,\n         minimizable: this.#application?.options?.minimizable ?? true,\n         positionable: this.#application?.options?.positionable ?? true,\n         resizable: this.#application?.options?.resizable ?? true\n      };\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the SvelteApp app options {@link SvelteAppNS.Options.headerButtonNoClose}\n    * to remove the close button from the header buttons.\n    *\n    * @param {object} [opts] - Optional parameters (for internal use)\n    *\n    * @param {boolean} [opts.headerButtonNoClose] - The value for `headerButtonNoClose`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // For AppV2 label compatibility for close button: `Close Window` instead of `Close`.\n      const closeButton = buttons.find((button) => button.class === 'close');\n      if (closeButton) { closeButton.label = 'APPLICATION.TOOLS.Close'; }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n\n   // Internal implementation ----------------------------------------------------------------------------------------\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * `storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {import('./types').StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         focusAuto: propertyStore(writableAppOptions, 'focusAuto'),\n         focusKeep: propertyStore(writableAppOptions, 'focusKeep'),\n         focusTrap: propertyStore(writableAppOptions, 'focusTrap'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         headerIcon: propertyStore(writableAppOptions, 'headerIcon'),\n         headerNoTitleMinimized: propertyStore(writableAppOptions, 'headerNoTitleMinimized'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         positionable: propertyStore(writableAppOptions, 'positionable'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         activeWindow: globalThis,\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {import('./types').StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         // activeWindow: propertyStore(writableUIOptions, 'activeWindow'),\n         activeWindow: derived(writableUIOptions, ($options, set) => set($options.activeWindow)),\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    *\n    * @see SvelteApp._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // // Handles updating header buttons to add / remove button labels.\n      // this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      // {\n      //    this.updateHeaderButtons({ headerButtonNoLabel: value });\n      // }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            globalThis.ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete globalThis.ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApp.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n}\n","/**\n * Defines the application shell contract. If Svelte components export getter / setters for the following properties\n * then that component is considered an application shell.\n *\n * @type {string[]}\n */\nconst applicationShellContract = ['elementRoot'];\n\nObject.freeze(applicationShellContract);\n\nexport { applicationShellContract };\n","import { applicationShellContract } from './applicationShellContract.js';\n\n/**\n * Provides a method to determine if the passed in object / Svelte component follows the application shell contract.\n * This involves ensuring that the accessors defined in `applicationShellContract`.\n *\n * Note: A caveat is that when using Vite in a developer build components are wrapped in a proxy / ProxyComponent that\n * defines instance accessors versus on the prototype, so the check below ensures that all accessors in the contract are\n * either available on the prototype or directly on the instance.\n *\n * @param {*}  component - Object / component to test.\n *\n * @returns {boolean} Whether the component is a ApplicationShell or TJSApplicationShell.\n */\nexport function isApplicationShell(component)\n{\n   if (component === null || component === void 0) { return false; }\n\n   let compHasContract = true;\n   let protoHasContract = true;\n\n   // Check for accessors on the instance.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(component, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { compHasContract = false; }\n   }\n\n   // Get the prototype which is the parent SvelteComponent that has any getter / setters.\n   const prototype = Object.getPrototypeOf(component);\n\n   // Verify the application shell contract. If the accessors (getters / setters) are defined for\n   // `applicationShellContract`.\n   for (const accessor of applicationShellContract)\n   {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, accessor);\n      if (descriptor === void 0 || descriptor.get === void 0 || descriptor.set === void 0) { protoHasContract = false; }\n   }\n\n   return compHasContract || protoHasContract;\n}\n","import { TJSSvelte }             from '#runtime/svelte/util';\nimport { CrossWindow }           from '#runtime/util/browser';\nimport { isObject }              from '#runtime/util/object';\n\nimport { isApplicationShell }    from './isApplicationShell.js';\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {object}            [opts] - Optional parameters.\n *\n * @param {object}            [opts.app] - The target application\n *\n * @param {import('#runtime/svelte/util').TJSSvelte.Config.Dynamic}  [opts.config] - Svelte component options\n *\n * @param {Function}          [opts.elementRootUpdate] - A callback to assign to the external context.\n *\n * @returns {import('#svelte-fvtt/application').SvelteData} The config + instantiated Svelte component.\n */\nexport function loadSvelteConfig({ app, config, elementRootUpdate } = {})\n{\n   let target;\n\n   // A specific HTMLElement to append Svelte component.\n   if (CrossWindow.isHTMLElement(config.target))\n   {\n      target = config.target;\n   }\n   else if (typeof config.target === 'string')\n   {\n      // Attempt to find target from query selector string.\n      const activeWindow = app?.reactive?.activeWindow;\n      target = activeWindow?.document?.querySelector(config.target);\n   }\n\n   if (!CrossWindow.isHTMLElement(target))\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - Could not find target, '${config.target}', for config:\\n`,\n        'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = TJSSvelte.config.parseConfig({ ...config, target }, { contextExternal: true, thisArg: app });\n\n   const externalContext = svelteConfig.context.get('#external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n   externalContext.sessionStorage = app.reactive.sessionStorage;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (isObject(app._eventbus) && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Seal external context so that it can't be extended.\n   Object.seal(externalContext);\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   if (!CrossWindow.isHTMLElement(element))\n   {\n      console.log(\n       `%c[TRL] loadSvelteConfig error - No application shell contract found. Did you bind and export a HTMLElement ` +\n        `as 'elementRoot' and include '<svelte:options accessors={true}/>'?\\n` +\n         `\\nOffending config:\\n`, 'background: rgb(57,34,34)', config);\n\n      throw new Error();\n   }\n\n   return { config: svelteConfig, component, element };\n}\n","/**\n * Provides an index of all visible rendered {@link SvelteApp} instances in a given Svelte runtime. This allows\n * bulk operations to be performed across all apps.\n */\nexport class TJSAppIndex\n{\n   /**\n    * Stores all visible / rendered apps.\n    *\n    * @type {Map<string, import('#svelte-fvtt/application').SvelteApp>}\n    */\n   static #visibleApps = new Map();\n\n   /**\n    * Adds a SvelteApp to all visible apps tracked.\n    *\n    * @param {import('#svelte-fvtt/application').SvelteApp} app - A SvelteApp\n    *\n    * @package\n    */\n   static add(app)\n   {\n      this.#visibleApps.set(app.id, app);\n   }\n\n   /**\n    * Removes a SvelteApp from all visible apps tracked.\n    *\n    * @param {import('#svelte-fvtt/application').SvelteApp} app - A SvelteApp\n    *\n    * @package\n    */\n   static delete(app)\n   {\n      this.#visibleApps.delete(app.id);\n   }\n\n   /**\n    * Gets a particular app by ID.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {import('#svelte-fvtt/application').SvelteApp} Associated app.\n    */\n   static get(key)\n   {\n      return this.#visibleApps.get(key);\n   }\n\n   /**\n    * Returns whether an associated app by ID is being tracked.\n    *\n    * @param {string}   key - App ID.\n    *\n    * @returns {boolean} The given App ID is visible.\n    */\n   static has(key)\n   {\n      return this.#visibleApps.has(key);\n   }\n\n   /**\n    * @returns {IterableIterator<string>} All visible app IDs.\n    */\n   static keys()\n   {\n      return this.#visibleApps.keys();\n   }\n\n   /**\n    * @returns {IterableIterator<import('#svelte-fvtt/application').SvelteApp>} All visible apps.\n    */\n   static values()\n   {\n      return this.#visibleApps.values();\n   }\n}\n","import { TJSAppIndex } from '../internal/index.js';\n\nexport class FoundryHMRSupport\n{\n   static initialize()\n   {\n      if (import.meta.hot)\n      {\n         Hooks.on('hotReload', (data) =>\n         {\n            // Only handle JSON hot reload presumably specified in package manifest for language translation files.\n            if (data?.extension === 'json')\n            {\n               // Postpone until next macrotask to allow Foundry to update localization first.\n               setTimeout(() =>\n               {\n                  for (const app of TJSAppIndex.values())\n                  {\n                     const appShell = app.svelte.appShell;\n\n                     // Retrieve the original `svelte-hmr` instrumented HMR component / not the proxy.\n                     const hmrComponent = appShell?.$$?.hmr_cmp;\n\n                     if (appShell && typeof hmrComponent?.$replace === 'function')\n                     {\n                        const svelteData = app.svelte.appShellData;\n                        if (svelteData)\n                        {\n                           try\n                           {\n                              // Replace with self; this will invoke `on_hmr` callback in associated SvelteApp.\n                              hmrComponent.$replace(hmrComponent.constructor, {\n                                 target: svelteData.config.target,\n                                 anchor: svelteData.config.anchor,\n                                 preserveLocalState: true,\n                                 conservative: true\n                              });\n                           }\n                           catch (error)\n                           {\n                              const name = hmrComponent?.constructor?.name ?? 'Unknown';\n                              console.error(`TyphonJS Runtime Library error; Could not hot reload component: '${name}'`);\n                              console.error(error);\n                           }\n                        }\n                     }\n                  }\n               }, 0);\n            }\n\n            return true;\n         });\n      }\n   }\n}\n","import { TJSPosition }     from '#runtime/svelte/store/position';\nimport { TJSSvelte }       from '#runtime/svelte/util';\nimport { A11yHelper }      from '#runtime/util/a11y';\nimport { CrossWindow }     from '#runtime/util/browser';\n\nimport {\n   deepMerge,\n   hasGetter,\n   isObject }              from '#runtime/util/object';\n\nimport {\n   ApplicationState,\n   GetSvelteData,\n   loadSvelteConfig,\n   SvelteReactive,\n   TJSAppIndex }           from './internal/index.js';\n\n/**\n * Provides a Svelte aware extension to the Foundry {@link Application} class to manage the app lifecycle\n * appropriately. You can declaratively load one or more components from `defaultOptions` using a\n * {@link #runtime/svelte/util!TJSSvelte.Config.Dynamic} object in the {@link SvelteAppNS.Options.svelte} property.\n *\n * @implements {TJSPosition.Positionable}\n */\nexport class SvelteApp extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {import('svelte').SvelteComponent[] | null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {import('./types').SvelteAppNS.API.State}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * On initial render gating of `setPosition` invoked by `Application._render` occurs, so that percentage values\n    * can correctly be positioned with initial helper constraints (centered).\n    *\n    * @type {boolean}\n    */\n   #gateSetPosition = false;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {TJSPosition}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {import('./internal/state-svelte/types').SvelteData[] | null[]}\n    */\n   #svelteData = [null];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * #svelteData.\n    *\n    * @type {import('./types').SvelteAppNS.API.Svelte<Options>}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {import('./internal/state-reactive/types-local').SvelteReactiveStores}\n    */\n   #stores;\n\n   /**\n    * @param {Partial<import('./types').SvelteAppNS.Options>} [options] - The options for the application.\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      if (!isObject(this.options.svelte))\n      {\n         throw new Error(`SvelteApp - constructor - No Svelte configuration object found in 'options'.`);\n      }\n\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize TJSPosition with the position object set by Application.\n      this.#position = new TJSPosition(this, {\n         ...this.position,\n         ...this.options,\n         initial: this.options.positionInitial,\n         ortho: this.options.positionOrtho,\n         validator: this.options.positionValidator\n      });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve TJSPosition by `this.position`.\n       *\n       * @member {TJSPosition} position - Adds accessors to SvelteApp to get / set the position data.\n       *\n       * @memberof SvelteApp#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (isObject(position)) { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApp supports.\n    *\n    * @returns {import('./types').SvelteAppNS.Options} options - Application options.\n    * @see https://foundryvtt.com/api/interfaces/client.ApplicationOptions.html\n    */\n   static get defaultOptions()\n   {\n      return /** @type {import('./types').SvelteAppNS.Options} */ deepMerge(super.defaultOptions, {\n         defaultCloseAnimation: true,     // If false the default slide close animation is not run.\n         draggable: true,                 // If true then application shells are draggable.\n         focusAuto: true,                 // When true auto-management of app focus is enabled.\n         focusKeep: false,                // When `focusAuto` and `focusKeep` is true; keeps internal focus.\n         focusSource: void 0,             // Stores any A11yFocusSource data that is applied when app is closed.\n         focusTrap: true,                 // When true focus trapping / wrapping is enabled keeping focus inside app.\n         headerButtonNoClose: false,      // If true then the close header button is removed.\n         headerButtonNoLabel: false,      // If true then header button labels are removed for application shells.\n         headerIcon: void 0,              // Sets a header icon given an image URL.\n         headerNoTitleMinimized: false,   // If true then header title is hidden when application is minimized.\n         minHeight: MIN_WINDOW_HEIGHT,    // Assigned to position. Number specifying minimum window height.\n         minWidth: MIN_WINDOW_WIDTH,      // Assigned to position. Number specifying minimum window width.\n         positionable: true,              // If false then `position.set` does not take effect.\n         positionInitial: TJSPosition.Initial.browserCentered,      // A helper for initial position placement.\n         positionOrtho: true,             // When true TJSPosition is optimized for orthographic use.\n         positionValidator: TJSPosition.Validators.transformWindow, // A function providing the default validator.\n         sessionStorage: void 0,          // An instance of WebStorage (session) to share across SvelteApps.\n         svelte: void 0,                  // A Svelte configuration object.\n         transformOrigin: 'top left'      // By default, 'top / left' respects rotation when minimizing.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApp.\n    *\n    * @returns {import('./types').SvelteAppNS.API.Reactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {import('./types').SvelteAppNS.API.State} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the `Svelte` helper class w/ various methods to access the mounted application shell component.\n    *\n    * @returns {import('./types').SvelteAppNS.API.Svelte<Options>} `Svelte` / mounted application shell API.\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html :\n       [this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean} [opts.focus=true] - When true and the active element is not contained in the app `elementTarget`\n    *        is focused..\n    *\n    * @param {boolean} [opts.force=false] - Force bring to top; will increment z-index by popOut order.\n    *\n    * @ignore\n    * @internal\n    */\n   bringToTop({ focus = true, force = false } = {})\n   {\n      // Only perform bring to top when the active window is the main Foundry window instance.\n      if (this.reactive.activeWindow !== globalThis) { return; }\n\n      if (force || this.popOut) { super.bringToTop(); }\n\n      const elementTarget = this.elementTarget;\n      const activeElement = document.activeElement;\n\n      // If the activeElement is not contained in this app via elementTarget then blur the current active element\n      // and make elementTarget focused.\n      if (focus && elementTarget && activeElement !== elementTarget && !elementTarget?.contains(activeElement))\n      {\n         // Blur current active element.\n         if (A11yHelper.isFocusTarget(activeElement))\n         {\n            activeElement.blur();\n         }\n\n         elementTarget?.focus();\n      }\n\n      globalThis.ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and unregisters references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    *\n    * @ignore\n    * @internal\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el)\n      {\n         /**\n          * @ignore\n          * @internal\n          */\n         this._state = states.CLOSED;\n\n         return;\n      }\n\n      // Support for PopOut! module; `close` is double invoked; once before the element is rejoined to the main window.\n      // Reject close invocations when the element window is not the main originating window / globalThis.\n      if (CrossWindow.getWindow(el, { throws: false }) !== globalThis) { return; }\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSING;\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * Note: JQuery wrapping as Foundry event arguments uses JQuery.\n          */\n         Hooks.call(`close${cls.name}`, this, $(el));\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         if (!isObject(entry)) { continue; }\n\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(TJSSvelte.util.outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (isObject(eventbus) && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.allSettled(svelteDestroyPromises);\n\n      // Remove from all visible apps tracked.\n      TJSAppIndex.delete(this);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData[0] = null;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.state.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n\n      delete globalThis.ui.windows[this.appId];\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._minimized = false;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._scrollPositions = null;\n\n      /**\n       * @ignore\n       * @internal\n       */\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store state.\n      this.#stores.uiStateUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n\n      // Apply any stored focus options and then remove them from options.\n      A11yHelper.applyFocusSource(this.options.focusSource);\n\n      delete this.options.focusSource;\n   }\n\n   /**\n    * Specify the set of config buttons which should appear in the SvelteApp header. Buttons should be returned as\n    * an Array of objects. The header buttons which are added to the application can be modified by the\n    * `getApplicationHeaderButtons` hook.\n    *\n    * SvelteApp extends the button functionality with full reactivity for state changes during callbacks. Callbacks\n    * receive the button data and can modify it to update the button state.\n    *\n    * @privateRemarks Provide a basic override implementation to extend types with additional SvelteApp functionality.\n    *\n    * @returns {import('./types').SvelteAppNS.HeaderButton[]} All header buttons.\n    * @protected\n    */\n   _getHeaderButtons()\n   {\n      return super._getHeaderButtons();\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _injectHTML()\n   {\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only triggered on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      // A sanity check; absence should be detected in constructor.\n      if (!isObject(this.options.svelte))\n      {\n         throw new Error(`SvelteApp - _injectHTML - No Svelte configuration object found in 'options'.`);\n      }\n\n      const svelteData = loadSvelteConfig({\n         app: this,\n         config: this.options.svelte,\n         elementRootUpdate\n      });\n\n      // A sanity check as shouldn't hit this case as only one component is being mounted.\n      if (this.svelte.appShell !== null)\n      {\n         throw new Error(\n          `SvelteApp - _injectHTML - An application shell is already mounted; offending config:\\n` +\n           `${JSON.stringify(this.options.svelte)}`);\n      }\n\n      this.#applicationShellHolder[0] = svelteData.component;\n\n      // If Vite / HMR / svelte_hmr is enabled then add a hook to receive callbacks when the ProxyComponent\n      // refreshes. Update the element root accordingly and force an update to TJSPosition.\n      // See this issue for info about `on_hmr`:\n      // https://github.com/sveltejs/svelte-hmr/issues/57\n      if (TJSSvelte.util.isHMRProxy(svelteData.component) && Array.isArray(svelteData.component?.$$?.on_hmr))\n      {\n         svelteData.component.$$.on_hmr.push(() => () => this.#updateApplicationShell());\n      }\n\n      this.#svelteData[0] = svelteData;\n\n      // Wrap `elementRoot` as a JQuery object and set to AppV1 / Application element.\n      this._element = $(this.svelte.appShell.elementRoot);\n\n      // Detect if the application shell exports an `elementContent` accessor.\n      this.#elementContent = hasGetter(this.svelte.appShell, 'elementContent') ?\n       this.svelte.appShell.elementContent : null;\n\n      // Detect if the application shell exports an `elementTarget` accessor if not set `elementTarget` to\n      // `elementRoot`.\n      this.#elementTarget = hasGetter(this.svelte.appShell, 'elementTarget') ? this.svelte.appShell.elementTarget :\n       this.svelte.appShell.elementRoot;\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApp.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async maximize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Get the complete position before minimized. Used to reset min width & height to initial values later.\n      const positionBefore = this.position.state.get({ name: '#beforeMinimized' });\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.state.restore({\n            name: '#beforeMinimized',\n            async: true,\n            animateTo: true,\n            properties: ['width'],\n            duration: 0.1\n         });\n      }\n\n      element.classList.remove('minimized');\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.state.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.state.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration: durationMS, fill: 'forwards' }).finished; // WAAPI in ms.\n\n      // Restore previous min width & height from saved data, app options, or default Foundry values.\n      this.position.set({\n         minHeight: positionBefore.minHeight ?? this.options?.minHeight ?? MIN_WINDOW_HEIGHT,\n         minWidth: positionBefore.minWidth ?? this.options?.minWidth ?? MIN_WINDOW_WIDTH,\n      });\n\n      // Remove inline styles that override any styles assigned to the app.\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      this._minimized = false;\n\n      // Using a 50ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() =>\n      {\n         content.style.overflow = null;\n\n         // Reset all children of content removing overflow hidden.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = null;\n         }\n      }, 50);\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: false }));\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApp.minimize}\n    * to animate the content area.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {number}   [opts.duration=0.1] - Controls content area animation duration in seconds.\n    */\n   async minimize({ animate = true, duration = 0.1 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiStateUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const durationMS = duration * 1000; // For WAAPI.\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Save current max / min height & width.\n      const beforeMinWidth = this.position.minWidth;\n      const beforeMinHeight = this.position.minHeight;\n\n      // Set minimized min width & height for header bar.\n      this.position.set({ minWidth: 100, minHeight: 30 });\n\n      // Also set inline styles to override any styles scoped to the app.\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      if (content)\n      {\n         content.style.overflow = 'hidden';\n\n         // Set all children of content to overflow hidden as if there is going to be additional scrolling elements\n         // they are likely one level deep.\n         for (let cntr = content.children.length; --cntr >= 0;)\n         {\n            content.children[cntr].style.overflow = 'hidden';\n         }\n      }\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: durationMS, fill: 'forwards' }); // WAAPI in ms.\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', durationMS);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      const saved = this.position.state.save({ name: '#beforeMinimized', constraints });\n\n      // Set the initial before min width & height.\n      saved.minWidth = beforeMinWidth;\n      saved.minHeight = beforeMinHeight;\n\n      const headerOffsetHeight = header.offsetHeight;\n\n      // minHeight needs to be adjusted to header height.\n      this.position.minHeight = headerOffsetHeight;\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animate.to({ height: headerOffsetHeight }, { duration }).finished;\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n\n         if (className.includes('window-title') || className.includes('close')) { continue; }\n\n         // v10+ of Foundry core styles automatically hides anything besides the window title and close button, so\n         // explicitly set display to block.\n         if (className.includes('keep-minimized'))\n         {\n            header.children[cntr].style.display = 'block';\n            continue;\n         }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animate.to({ width: MIN_WINDOW_WIDTH }, { duration: 0.1 }).finished;\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    */\n   onSvelteMount() {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Provides a callback after the main application shell is remounted. This may occur during HMR / hot module\n    * replacement or directly invoked from the `elementRootUpdate` callback passed to the application shell component\n    * context.\n    */\n   onSvelteRemount() {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApp has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link TJSPosition.set}.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _render(force = false, options = {})\n   {\n      // Store any focusSource instance.\n      if (isObject(options?.focusSource)) { this.options.focusSource = options.focusSource; }\n\n      const activeWindow = this.reactive.activeWindow;\n\n      try\n      {\n         if (this._state === Application.RENDER_STATES.NONE &&\n          A11yHelper.isFocusTarget(activeWindow.document.querySelector(`#${this.id}`)))\n         {\n            console.warn(`SvelteApp - _render: A DOM element already exists for CSS ID '${this.id\n             }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n            return;\n         }\n      }\n      catch (err)\n      {\n         console.warn(`SvelteApp - _render: Potentially malformed application ID '${this.id\n          }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      // On initial render gating of `setPosition` invoked by `Application._render` occurs, so that percentage values\n      // can correctly be positioned with initial helper constraints (centered).\n      this.#gateSetPosition = true;\n\n      await super._render(force, options);\n\n      this.#gateSetPosition = false;\n\n      // Handle the same render exclusion tests that reject a render in Application.\n\n      // Do not render under certain conditions.\n      if ([Application.RENDER_STATES.CLOSING, Application.RENDER_STATES.RENDERING].includes(this._state)) { return; }\n\n      // Applications which are not currently rendered must be forced.\n      if (!force && (this._state <= Application.RENDER_STATES.NONE)) { return; }\n\n      // It is necessary to directly invoke `position.set` as TJSPosition uses accessors and is not a bare object, so\n      // the merging that occurs in `Application._render` does not take effect. Additionally, any of the main\n      // positional properties that are defined as strings such as percentage values need to be set after the element\n      // is mounted.\n      if (!this._minimized)\n      {\n         this.#position.set({\n            left: typeof this.options?.left === 'string' ? this.options.left : void 0,\n            height: typeof this.options?.height === 'string' ? this.options.height : void 0,\n            maxHeight: typeof this.options?.maxHeight === 'string' ? this.options.maxHeight : void 0,\n            maxWidth: typeof this.options?.maxWidth === 'string' ? this.options.maxWidth : void 0,\n            minHeight: typeof this.options?.minHeight === 'string' ? this.options.minHeight : void 0,\n            minWidth: typeof this.options?.minWidth === 'string' ? this.options.minWidth : void 0,\n            rotateX: typeof this.options?.rotateX === 'string' ? this.options.rotateX : void 0,\n            rotateY: typeof this.options?.rotateY === 'string' ? this.options.rotateY : void 0,\n            rotateZ: typeof this.options?.rotateZ === 'string' ? this.options.rotateZ : void 0,\n            rotation: typeof this.options?.rotation === 'string' ? this.options.rotation : void 0,\n            top: typeof this.options?.top === 'string' ? this.options.top : void 0,\n            width: typeof this.options?.width === 'string' ? this.options.width : void 0,\n\n            ...options\n         });\n      }\n\n      if (!this.#onMount)\n      {\n         // Add to visible apps tracked.\n         TJSAppIndex.add(this);\n\n         this.onSvelteMount();\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Provide an empty JQuery element per the core Foundry API.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderInner()\n   {\n      const activeWindow = this.reactive.activeWindow;\n\n      const html = activeWindow.document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @protected\n    * @ignore\n    * @internal\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link TJSPosition.set}.\n    * This allows position to be fully reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link TJSPosition.validators} / ValidatorAPI functionality.\n    *\n    * @param {TJSPosition.API.Data.TJSPositionDataRelative}   [position] - TJSPosition data.\n    *\n    * @returns {TJSPosition} The updated position object for the application containing the new values.\n    * @ignore\n    */\n   setPosition(position)\n   {\n      return !this.#gateSetPosition ? this.position.set(position) : this.position;\n   }\n\n   /**\n    * This method is invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApp.\n    *\n    * This method may also be invoked by HMR / hot module replacement via `svelte-hmr`.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.appShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            this.#elementTarget = typeof this.options.selectorTarget === 'string' ?\n             this._element[0].querySelector(this.options.selectorTarget) : this._element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.popOut ? this.#elementTarget?.firstChild : this.#elementTarget]);\n\n         this.onSvelteRemount();\n      }\n   }\n}\n","import { SvelteApp } from '../SvelteApp.js';\n\n/**\n * Handle `PopOut!` module hooks to allow applications to popout to their own browser window.\n */\nexport class PopoutSupport\n{\n   static initialize()\n   {\n      Hooks.on('PopOut:loading', (app, popout) =>\n      {\n         if (app instanceof SvelteApp)\n         {\n            // Disable app position system.\n            app.position.enabled = false;\n\n            // Save current `headerButtonNoClose` state.\n            app.state.save({\n               name: '#beforePopout',\n               headerButtonNoClose: app.reactive.headerButtonNoClose\n            });\n\n            // Set the apps active window to the popout browser window.\n            app.reactive.activeWindow = popout;\n\n            // Disable the close button.\n            app.reactive.headerButtonNoClose = true;\n         }\n      });\n\n      Hooks.on('PopOut:popin', (app) => this.#handleRejoin(app));\n      Hooks.on('PopOut:close', (app) => this.#handleRejoin(app));\n   }\n\n   /**\n    * Handles rejoining the app to main browser window.\n    *\n    * @param {Application} app - The target app.\n    */\n   static #handleRejoin(app)\n   {\n      if (app instanceof SvelteApp)\n      {\n         // Enable the app position system.\n         app.position.enabled = true;\n\n         // Restore the initial header button no close state.\n         const beforeData = app.state.remove({ name: '#beforePopout' });\n         if (beforeData) { app.reactive.headerButtonNoClose = beforeData?.headerButtonNoClose ?? false; }\n\n         // Reset the apps active window to the main `globalThis` reference.\n         app.reactive.activeWindow = void 0;\n      }\n   }\n}\n","import { writable } from '#svelte/store';\n\n/**\n * Provides reactive observation of the Foundry core theme applied to `document.body`. There are several stores\n * available to receive updates when the theme changes.\n */\nexport class ThemeObserver\n{\n   /**\n    * All readable theme stores.\n    *\n    * @type {Readonly<({\n    *    theme: Readonly<import('#svelte/store').Readable<'theme-dark' | 'theme-light'>>,\n    *    themeDark: Readonly<import('#svelte/store').Readable<boolean>>,\n    *    themeLight: Readonly<import('#svelte/store').Readable<boolean>>,\n    * })>}\n    */\n   static #stores;\n\n   /**\n    * Internal setter for theme stores.\n    *\n    * @type {({\n    *    theme: Function,\n    *    themeDark: Function,\n    *    themeLight: Function,\n    * })}\n    */\n   static #storeSet;\n\n   /**\n    * Current theme.\n    *\n    * @type {string}\n    */\n   static #theme = '';\n\n   /**\n    * @returns {Readonly<({\n    *    theme: Readonly<import('#svelte/store').Readable<'theme-dark' | 'theme-light'>>,\n    *    themeDark: Readonly<import('#svelte/store').Readable<boolean>>,\n    *    themeLight: Readonly<import('#svelte/store').Readable<boolean>>,\n    * })>} Current core theme stores.\n    */\n   static get stores() { return this.#stores; }\n\n   /**\n    * @returns {'theme-dark' | 'theme-light'} Current core theme.\n    */\n   static get theme() { return this.#theme; }\n\n   /**\n    * @returns {boolean} Is the core theme `dark`.\n    */\n   static get themeDark() { return this.#theme === 'theme-dark'; }\n\n   /**\n    * @returns {boolean} Is the core theme `light`.\n    */\n   static get themeLight() { return this.#theme === 'theme-light'; }\n\n   /**\n    * Helper to apply current core theme to a given SvelteApp optional classes.\n    *\n    * @param {import('#svelte-fvtt/application').SvelteApp} application - Svelte application.\n    *\n    * @returns {string} App classes CSS string with current core theme applied.\n    */\n   static appClasses(application)\n   {\n      const classes = new Set([\n         ...Array.isArray(application?.options?.classes) ? application.options.classes : [],\n      ]);\n\n      // In AppV1 `theme-light` is always applied. Remove it and add the actual AppV2 theme.\n      classes.delete('theme-light');\n\n      classes.add('themed');\n      classes.add(this.#theme);\n\n      return Array.from(classes).join(' ');\n   }\n\n   /**\n    * Initialize `document.body` theme observation.\n    */\n   static initialize()\n   {\n      if (this.#stores !== void 0) { return; }\n\n      const themeStore = writable(this.#theme);\n      const themeDarkStore = writable(false);\n      const themeLightStore = writable(false);\n\n      this.#stores = Object.freeze({\n         theme: Object.freeze({ subscribe: themeStore.subscribe }),\n         themeDark: Object.freeze({ subscribe: themeDarkStore.subscribe }),\n         themeLight: Object.freeze({ subscribe: themeLightStore.subscribe })\n      });\n\n      this.#storeSet = {\n         theme: themeStore.set,\n         themeDark: themeDarkStore.set,\n         themeLight: themeLightStore.set\n      };\n\n      const observer = new MutationObserver(() =>\n      {\n         if (document.body.classList.contains('theme-light'))\n         {\n            this.#theme = 'theme-light';\n\n            this.#storeSet.themeDark(false);\n            this.#storeSet.themeLight(true);\n         }\n         else if (document.body.classList.contains('theme-dark'))\n         {\n            this.#theme = 'theme-dark';\n\n            this.#storeSet.themeDark(true);\n            this.#storeSet.themeLight(false);\n         }\n\n         this.#storeSet.theme(this.#theme);\n      });\n\n      // Only listen for class changes.\n      observer.observe(document.body, { attributes: true, attributeFilter: ['class'] });\n   }\n}\n","import {\n   deepMerge,\n   isObject,\n   klona,\n   safeAccess,\n   safeSet }   from '#runtime/util/object';\n\n/**\n * Provides storage for all dialog options through individual accessors and `get`, `merge`, `replace` and `set` methods\n * that safely access and update data changed to the mounted DialogShell component reactively.\n */\nexport class TJSDialogData\n{\n   /**\n    * @type {import('../../index.js').SvelteApp}\n    */\n   #application;\n\n   /**\n    * Stores the dialog options data.\n    *\n    * @type {import('./types').TJSDialog.OptionsData}\n    */\n   #internal = {};\n\n   /**\n    * @param {import('../../index.js').SvelteApp} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n\n      Object.seal(this);\n   }\n\n   /**\n    * @returns {{ [key: string]: import('./types').TJSDialogButtonData }} The dialog button configuration.\n    */\n   get buttons()\n   {\n      return this.#internal.buttons;\n   }\n\n   /**\n    * Set the dialog button configuration.\n    *\n    * @param {string} buttons - New dialog button configuration.\n    */\n   set buttons(buttons)\n   {\n      this.#internal.buttons = buttons;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('#runtime/svelte/util').TJSSvelte.Config.Minimal | string} The Svelte configuration object or HTML string\n    *          content.\n    */\n   get content()\n   {\n      return this.#internal.content;\n   }\n\n   /**\n    * Set the Svelte configuration object or HTML string content.\n    *\n    * @param {import('#runtime/svelte/util').TJSSvelte.Config.Minimal | string} content - New Svelte configuration object or\n    *        HTML string content.\n    */\n   set content(content)\n   {\n      this.#internal.content = content;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string} The default button ID to focus initially.\n    */\n   get default()\n   {\n      return this.#internal.default;\n   }\n\n   /**\n    * Set the default button ID to focus initially.\n    *\n    * @param {string} newDefault - New default button ID to focus initially.\n    */\n   set default(newDefault)\n   {\n      this.#internal.default = newDefault;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} The dialog draggable state; draggable when true.\n    */\n   get draggable()\n   {\n      return this.#internal.draggable;\n   }\n\n   /**\n    * Set the dialog state; draggable when true.\n    *\n    * @param {boolean} draggable - New dialog draggable state; draggable when true.\n    */\n   set draggable(draggable)\n   {\n      this.#internal.draggable = draggable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true auto-management of app focus is enabled.\n    */\n   get focusAuto()\n   {\n      return this.#internal.focusAuto;\n   }\n\n   /**\n    * Set the dialog auto-management of app focus.\n    *\n    * @param {boolean} focusAuto - New dialog auto-management of app focus.\n    */\n   set focusAuto(focusAuto)\n   {\n      this.#internal.focusAuto = focusAuto;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the first focusable element that isn't a button is focused.\n    */\n   get focusFirst()\n   {\n      return this.#internal.focusFirst;\n   }\n\n   /**\n    * Set the dialog first focusable element state.\n    *\n    * @param {boolean} focusFirst - New dialog first focusable element state.\n    */\n   set focusFirst(focusFirst)\n   {\n      this.#internal.focusFirst = focusFirst;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    */\n   get focusKeep()\n   {\n      return this.#internal.focusKeep;\n   }\n\n   /**\n    * Set the dialog `focusKeep` state. When `focusAuto` and `focusKeep` is true; keeps internal focus.\n    *\n    * @param {boolean} focusKeep - New dialog `focusKeep` state.\n    */\n   set focusKeep(focusKeep)\n   {\n      this.#internal.focusKeep = focusKeep;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the dialog is minimizable.\n    */\n   get minimizable()\n   {\n      return this.#internal.minimizable;\n   }\n\n   /**\n    * Set the dialog `minimizable` state. When true the dialog is minimizable.\n    *\n    * @param {boolean} minimizable - New dialog `minimizable` state.\n    */\n   set minimizable(minimizable)\n   {\n      this.#internal.minimizable = minimizable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true a modal dialog is displayed.\n    */\n   get modal()\n   {\n      return this.#internal.modal;\n   }\n\n   /**\n    * Set the dialog `modal` state. When true a modal dialog is displayed.\n    *\n    * @param {boolean} modal - New dialog `modal` state.\n    */\n   set modal(modal)\n   {\n      this.#internal.modal = modal;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('./types').TJSDialog.OptionsModal} Additional options for modal dialog display.\n    */\n   get modalOptions()\n   {\n      return this.#internal.modalOptions;\n   }\n\n   /**\n    * Set additional options for modal dialog display.\n    *\n    * @param {import('./types').TJSDialog.OptionsModal} modalOptions - New additional options for modal dialog display.\n    */\n   set modalOptions(modalOptions)\n   {\n      this.#internal.modalOptions = modalOptions;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true and an error is raised in dialog callback functions post a UI error notification.\n    */\n   get notifyError()\n   {\n      return this.#internal.notifyError;\n   }\n\n   /**\n    * Set the dialog `notifyError` state. When true and an error is raised in dialog callback functions post a UI error\n    * notification.\n    *\n    * @param {boolean} notifyError - New dialog `notifyError` state.\n    */\n   set notifyError(notifyError)\n   {\n      this.#internal.notifyError = notifyError;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string | ((data?: { application?: import('../../index.js').TJSDialog }) => any)} Callback invoked when\n    *          dialog is closed; no button option selected. When defined as a string any matching function by name\n    *          exported from content Svelte component is invoked.\n    */\n   get onClose()\n   {\n      return this.#internal.onClose;\n   }\n\n   /**\n    * Set callback invoked when dialog is closed; no button option selected. When defined as a string any matching\n    * function by name exported from content Svelte component is invoked..\n    *\n    * @param {string | ((data?: { application?: import('../../index.js').TJSDialog }) => any)} onClose - New dialog\n    *        `onClose` state.\n    */\n   set onClose(onClose)\n   {\n      this.#internal.onClose = onClose;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} Dialog `rejectClose` state. When true and a Promise has been created by {@link TJSDialog.wait}\n    *          and the Promise is not in the process of being resolved or rejected on close of the dialog any `onClose`\n    *          function is invoked and any result that is undefined will cause the Promise to then be rejected..\n    */\n   get rejectClose()\n   {\n      return this.#internal.rejectClose;\n   }\n\n   /**\n    * Set the dialog `rejectClose` state.\n    *\n    * @param {boolean} rejectClose - New dialog `rejectClose` state.\n    */\n   set rejectClose(rejectClose)\n   {\n      this.#internal.rejectClose = rejectClose;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true the dialog is resizable.\n    */\n   get resizable()\n   {\n      return this.#internal.resizable;\n   }\n\n   /**\n    * Set the dialog `resizable` state. When true the dialog is resizable.\n    *\n    * @param {boolean} resizable - New dialog `resizable` state.\n    */\n   set resizable(resizable)\n   {\n      this.#internal.resizable = resizable;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {boolean} When true and resolving any Promises and there are undefined results from any button callbacks\n    *          the button ID is resolved.\n    */\n   get resolveId()\n   {\n      return this.#internal.resolveId;\n   }\n\n   /**\n    * Set the dialog `resolveId` state. When true and resolving any Promises and there are undefined results from any\n    * button callbacks the button ID is resolved.\n    *\n    * @param {boolean} resolveId - New dialog `resolveId` state.\n    */\n   set resolveId(resolveId)\n   {\n      this.#internal.resolveId = resolveId;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {string} The dialog window title.\n    */\n   get title()\n   {\n      return this.#internal.title;\n   }\n\n   /**\n    * Set the dialog window title.\n    *\n    * @param {string} title - New dialog window title.\n    */\n   set title(title)\n   {\n      this.#internal.title = title;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {import('./types').TJSDialog.OptionsTransition} Transition options for the dialog.\n    */\n   get transition()\n   {\n      return this.#internal.transition;\n   }\n\n   /**\n    * Set transition options for the dialog.\n    *\n    * @param {import('./types').TJSDialog.OptionsTransition} transition - New transition options for the dialog.\n    */\n   set transition(transition)\n   {\n      this.#internal.transition = transition;\n      this.#updateComponent();\n   }\n\n   /**\n    * @returns {number | null} A specific z-index for the dialog. Pass null for the dialog to act like other\n    *          applications in regard bringing to top when activated.\n    */\n   get zIndex()\n   {\n      return this.#internal.zIndex;\n   }\n\n   /**\n    * Set specific z-index for the dialog.\n    *\n    * @param {number | null} zIndex - New z-index for the dialog.\n    */\n   set zIndex(zIndex)\n   {\n      this.#internal.zIndex = zIndex;\n      this.#updateComponent();\n   }\n\n   /**\n    * Provides a cloned copy of the dialog data.\n    * Note: The content attribute is not cloned as complex / props may be present.\n    *\n    * @returns {import('./types').TJSDialog.OptionsData} A clone of the dialog data.\n    */\n   clone()\n   {\n      // Make a shallow copy of internally stored data.\n      const shallowCopy = { ...this.#internal };\n\n      // Remove the content parameter as it may contain complex props sent to the hosted dialog component.\n      delete shallowCopy.content;\n\n      // Clone the internal data and then set the content directly.\n      const cData = klona(shallowCopy);\n      cData.content = this.#internal.content;\n\n      return cData;\n   }\n\n   /**\n    * Provides a way to safely get this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {any} Value at the accessor.\n    */\n   get(accessor, defaultValue)\n   {\n      return safeAccess(this.#internal, accessor, defaultValue);\n   }\n\n   /**\n    * @param {import('./types').TJSDialog.OptionsData} data - Merge provided data object into Dialog data.\n    */\n   merge(data)\n   {\n      deepMerge(this.#internal, data);\n      this.#updateComponent();\n   }\n\n   /**\n    * Sets the dialog data; this is reactive.\n    *\n    * @param {import('./types').TJSDialog.OptionsData}   data - Dialog data.\n    */\n   replace(data)\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialogData replace error: 'data' is not an object'.`); }\n\n      this.#internal = {};\n\n      // Merge new data and perform a reactive update.\n      this.merge(data);\n   }\n\n   /**\n    * Provides a way to safely set this dialogs data given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Automatically the dialog data will be updated in the associated DialogShell Svelte component.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {any}      value - Value to set.\n    *\n    * @returns {boolean} True if successful.\n    */\n   set(accessor, value)\n   {\n      const success = safeSet(this.#internal, accessor, value, { createMissing: true });\n\n      // If `this.#internal` modified then update the app options store.\n      if (success) { this.#updateComponent(); }\n\n      return success;\n   }\n\n   /**\n    * Updates the data in the Svelte dialog component.\n    */\n   #updateComponent()\n   {\n      const component = this.#application.svelte.appShell;\n      if (component?.data) { component.data = this.clone(); }\n   }\n}\n","import { DialogShell }        from '#svelte-fvtt/component/internal';\n\nimport { ManagedPromise }     from '#runtime/util/async';\n\nimport {\n   deepMerge,\n   isObject }                 from '#runtime/util/object';\n\nimport { TJSDialogData }      from './internal/state-dialog/index.js';\nimport { SvelteApp }          from './SvelteApp.js';\n\n/**\n * Provides a reactive dialog implementation configured from a unique dialog options object. The dialog features a\n * bottom button bar for user selection.\n *\n * A glasspane / modal option with various styling and transition capabilities is available when setting `modal: true`.\n *\n * Most importantly the `content` attribute of dialog data can be a Svelte component configuration object to render\n * your custom component as the dialog content. When using a Svelte component as the content you can assign a string\n * to the various `on<XXX>` dialog callbacks and an exported function from your component will be invoked to handle the\n * button callback. All dialog button callbacks and `onClose` callback receive a single argument which is the dialog /\n * application instance.\n *\n * When making a form with form validation or other dialog that you don't want to close immediately on button press you\n * can set `autoClose: false`, however you are 100% in control of resolving any Promise callbacks from button presses\n * and also closing the application. Each button can also be configured with `autoClose: false` in the button data.\n *\n * There is a handy Promise management capability to track a single Promise for the lifetime of a dialog available\n * at {@link TJSDialog.managedPromise}. By default when the user closes the dialog / application any managed Promise is\n * resolved with `null`. The managed Promise is available in any Svelte content component by using\n * `const managedPromise = getContext('#managedPromise')`. When handling any custom resolution particularly when\n * setting `autoClose: false` for a given button you are 100% in control of resolving or rejecting asynchronous data to\n * return from the dialog.\n *\n * To create and wait upon a managed promise for asynchronous return results use the static or member variation of\n * {@link TJSDialog.wait}.\n *\n * Please refer to {@link TJSDialog.OptionsData} for the various options used to construct the dialog.\n *\n * There are a couple of static helper methods to quickly create standard dialogs such as a 'yes' / 'no' confirmation\n * dialog with {@link TJSDialog.confirm} and an 'ok' single button dialog with {@link TJSDialog.prompt}.\n */\nexport class TJSDialog extends SvelteApp\n{\n   /** @type {TJSDialogData} */\n   #data;\n\n   /** @type {ManagedPromise} */\n   #managedPromise;\n\n   /**\n    * @param {import('./internal/state-dialog/types').TJSDialogNS.OptionsData} data - Dialog options.\n    *\n    * @param {import('./types').SvelteAppNS.OptionsCore}   [options] - SvelteApp options.\n    */\n   constructor(data, options = {})\n   {\n      // Note: explicit setting of `popOutModuleDisable` to prevent the PopOut! module from acting on modal dialogs.\n      // @ts-expect-error\n      super({\n         popOutModuleDisable: typeof data?.modal === 'boolean' ? data.modal : false,\n         ...options,\n\n         // Always ensure adding `dialog` class for core styles.\n         classes: Array.isArray(options.classes) ? [...options.classes, 'dialog'] : ['dialog']\n      });\n\n      this.#managedPromise = new ManagedPromise();\n\n      this.#data = new TJSDialogData(this);\n      this.#data.replace(data);\n   }\n\n   /**\n    * Default options for TJSDialog. Provides a default width and setting `height` to `auto` to always display dialog\n    * content even if it changes. The default `DialogShell` / `svelte` options should not be changed and instead mount\n    * the dialog content component by supplying a Svelte configuration object to dialog data `content` field.\n    *\n    * @returns {import('./types').SvelteAppNS.Options} Default options\n    */\n   static get defaultOptions()\n   {\n      return /** @type {import('./types').SvelteAppNS.Options} */ deepMerge(super.defaultOptions, {\n         classes: ['dialog', 'tjs-dialog'],\n         width: 400,\n         height: 'auto',\n         svelte: {\n            class: DialogShell,\n            intro: true,\n            target: document.body,\n            /**\n             * `this` is the TJSDialog instance when invoked.\n             *\n             * @this {TJSDialog}\n             *\n             * @returns {{data: import('./types').TJSDialog.OptionsData, managedPromise: ManagedPromise}} Props\n             */\n            props: function()\n            {\n               return {\n                  data: this.#data.clone(),\n                  managedPromise: this.#managedPromise\n               };\n            }\n         }\n      });\n   }\n\n   /**\n    * Returns the dialog data.\n    *\n    * @returns {import('./internal/state-dialog/types').TJSDialogNS.Data} Dialog data.\n    */\n   get data() { return this.#data; }\n\n   /**\n    * @returns {import('#runtime/util/async').ManagedPromise} Returns the managed promise.\n    */\n   get managedPromise() { return this.#managedPromise; }\n\n   /**\n    * Close the dialog and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes.\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>} A Promise which resolves once the application is closed with the callback value or\n    *                          `true`.\n    */\n   async close(options)\n   {\n      try\n      {\n         // Note: When handling a managed promise if a button selection has already been made the managed promise is\n         // already processing and the resolution below is skipped.\n         if (this.#managedPromise.isActive && !this.#managedPromise.isProcessing)\n         {\n            const result = TJSDialog.#invokeFn(this.#data.onClose, this, null);\n            const rejectClose = typeof this.#data.rejectClose === 'boolean' ? this.#data.rejectClose : false;\n\n            if (rejectClose && result === null)\n            {\n               this.#managedPromise.reject(new Error('TJSDialog was closed without a choice being made.'));\n            }\n            else\n            {\n               this.#managedPromise.resolve(result);\n            }\n         }\n      }\n      catch (err)\n      {\n         const notifyError = typeof this.#data.notifyError === 'boolean' ? this.#data.notifyError : true;\n         if (notifyError)\n         {\n            // TODO: When app eventbus is available send event for UI notification instead of Foundry API usage.\n            globalThis.ui.notifications.error(err, { console: false });\n         }\n\n         // If there is a managed Promise reject it or re-throw error.\n         if (!this.#managedPromise.reject(err)) { throw err; }\n      }\n      finally\n      {\n         await super.close(options);\n      }\n   }\n\n   /**\n    * Brings to top or renders this dialog returning a Promise that is resolved any button pressed or when the dialog\n    * is closed.\n    *\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {object}   [options] - Options.\n    *\n    * @param {boolean}  [options.reuse=false] - When true if there is an existing managed Promise this allows multiple\n    *        sources to await on the same result.\n    *\n    * @returns {Promise<T>} A promise for dialog resolution.\n    */\n   async wait(options)\n   {\n      // TODO: Direct usage of Foundry core Application API.\n      if (this.rendered)\n      {\n         this.bringToTop();\n      }\n      else\n      {\n         this.render(true, { focus: true });\n      }\n\n      // Return a managed Promise which is automatically resolved on button press via `DialogContent` component or when\n      // the dialog is closed.\n      return this.#managedPromise.create(options);\n   }\n\n   // ---------------------------------------------------------------------------------------------------------------\n\n   /**\n    * A helper factory method to create simple confirmation dialog windows which consist of simple yes / no prompts.\n    * If you require more flexibility, a custom TJSDialog instance is preferred. The default focused button is 'yes'.\n    * You can change the default focused button by setting `default` to `yes` or `no`.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialogNS.OptionsData & {\n    *    onYes?: string | ((data?: { application?: TJSDialog }) => any),\n    *    onNo?: string | ((data?: { application?: TJSDialog }) => any)\n    * }} [data] - Confirm dialog options.\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} [data.onYes] - Callback function upon `yes`; may be\n    *        an async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} [data.onNo] - Callback function upon `no`; may be an\n    *        async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {import('./types').SvelteAppNS.OptionsCore}  [options]  SvelteApp options passed to the\n    *        TJSDialog constructor.\n    *\n    * @returns {Promise<T>} A promise which resolves with result of yes / no callbacks or true / false.\n    *\n    * @example\n    * const result = await TJSDialog.confirm({\n    *  title: 'A Yes or No Question',\n    *  content: '<p>Choose wisely.</p>',\n    *  onYes: () => 'YES Result',\n    *  onNo: () => 'NO Result'\n    * });\n    *\n    * // Logs 'YES result', 'NO Result', or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async confirm({ onYes, onNo, ...data } = {}, options = {})\n   {\n      // Allow overwriting of default icon and labels.\n      const mergedButtons = deepMerge({\n         yes: {\n            icon: 'fas fa-check',\n            label: 'Yes'\n         },\n         no: {\n            icon: 'fas fa-times',\n            label: 'No',\n         }\n      }, data.buttons ?? {});\n\n      return this.wait({\n         ...data,\n         buttons: deepMerge(mergedButtons, {\n            yes: {\n               onPress: ({ application }) => this.#invokeFn(onYes, application, true)\n            },\n            no: {\n               onPress: ({ application }) => this.#invokeFn(onNo, application, false)\n            }\n         }),\n         default: data.default ?? 'yes'\n      }, options);\n   }\n\n   /**\n    * A helper method to invoke a callback function directly or lookup an exported function with the same name from any\n    * content Svelte component to invoke. This is used internally to apply default values for `confirm` and `prompt`.\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} callback - Callback function to invoke; may be an\n    *        async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {TJSDialog} application - TJSDialog instance passed to callback.\n    *\n    * @param {*} [defaultResult] - An optional default result to return; undefined if not specified.\n    *\n    * @returns {*} Result.\n    *\n    * @internal\n    */\n   static #invokeFn(callback, application, defaultResult = void 0)\n   {\n      let result = defaultResult;\n\n      switch (typeof callback)\n      {\n         case 'function':\n            // Pass the dialog instance to the callback.\n            result = callback({ application });\n            break;\n\n         case 'string':\n         {\n            const dialogComponent = application?.svelte?.appShell?.dialogComponent;\n\n            // Attempt lookup by function name in dialog instance component.\n            if (dialogComponent !== void 0 && typeof dialogComponent?.[callback] === 'function')\n            {\n               result = dialogComponent?.[callback]({ application });\n            }\n            else\n            {\n               if (dialogComponent === void 0)\n               {\n                  console.warn(`[TRL] TJSDialog warning: 'onPress' defined as a string with no ` +\n                   `associated content Svelte component.`);\n               }\n               else if (typeof dialogComponent?.[callback] !== 'function')\n               {\n                  console.warn(`[TRL] TJSDialog warning: The content Svelte component does not contain ` +\n                   `an associated function '${callback}'. Did you remember to add ` +\n                   `'<svelte:options accessors={true} />' and export the function?`);\n               }\n            }\n            break;\n         }\n      }\n\n      return result;\n   }\n\n   /**\n    * A helper factory method to display a basic \"prompt\" style TJSDialog with a single button.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialogNS.OptionsData & {\n    *    onOk?: string | ((data?: { application?: TJSDialog }) => any),\n    *    label?: string,\n    *    icon?: string\n    * }} [data] - Prompt dialog options that includes any TJSDialog options along with the following optional fields:\n    *\n    * @param {string|((data?: { application?: TJSDialog }) => any)} [data.onOk] - Callback function upon `ok`; may be\n    *        an async function. When defined as a string any matching function by name exported from content Svelte\n    *        component is invoked.\n    *\n    * @param {string}   [data.label] - The OK prompt button text.\n    *\n    * @param {string}   [data.icon=\"fas fa-check\"] - Set another icon besides `fas fa-check` for button.\n    *\n    * @param {import('./types').SvelteAppNS.OptionsCore}  [options]  SvelteApp options passed to the\n    *        TJSDialog constructor.\n    *\n    * @returns {Promise<T>} The returned value from the provided callback function or `true` if the button\n    *          is pressed.\n    *\n    * @example\n    * const result = await TJSDialog.prompt({\n    *  title: 'Are you OK?',\n    *  content: '<p>Are you OK?.</p>',\n    *  label: 'Feeling Fine!',\n    *  onOk: () => 'OK'\n    * });\n    *\n    * // Logs 'OK' or null if the user closed the dialog without making a selection.\n    * console.log(result);\n    */\n   static async prompt({ onOk, label, icon = 'fas fa-check', ...data } = {}, options = {})\n   {\n      return this.wait({\n         ...data,\n         buttons: {\n            ok: {\n               icon,\n               label,\n               onPress: ({ application }) => this.#invokeFn(onOk, application, true)\n            }\n         },\n         default: 'ok'\n      }, options);\n   }\n\n   /**\n    * Creates an anonymous data defined TJSDialog returning a Promise that can be awaited upon for the user to make a\n    * choice.\n    *\n    * Note: By default `null` is returned if the dialog is closed without a user making a choice.\n    *\n    * @template T\n    *\n    * @param {import('./internal/state-dialog/types').TJSDialogNS.OptionsData}  data - Dialog data passed to the\n    *        TJSDialog constructor.\n    *\n    * @param {import('./types').SvelteAppNS.OptionsCore}  [options]  SvelteApp options passed to the\n    *        TJSDialog constructor.\n    *\n    * @returns {Promise<T>} A Promise that resolves to the chosen result.\n    */\n   static async wait(data, options = {})\n   {\n      if (!isObject(data)) { throw new TypeError(`TJSDialog.wait error: 'data' is not an object'.`); }\n\n      // Instantiate and render the dialog.\n      return new this({ ...data }, options).wait();\n   }\n}\n","import {\n   FoundryHMRSupport,\n   PopoutSupport,\n   ThemeObserver }   from './external/index.js';\n\nimport { SvelteApp } from './SvelteApp.js';\n\nexport { SvelteApp, SvelteApp as SvelteApplication };\n\nexport * from './TJSDialog.js';\n\nexport { ThemeObserver };\n\n// Initialize core theme observation / changes.\nThemeObserver.initialize();\n\n// Handle `hotReload` Foundry hook when running the Vite dev server.\nif (import.meta.hot) { FoundryHMRSupport.initialize(); }\n\n// Handle `PopOut!` module hooks to allow applications to popout to their own browser window.\nPopoutSupport.initialize();\n"],"names":[],"mappings":"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"}