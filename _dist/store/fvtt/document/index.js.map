{"version":3,"file":"index.js","sources":["../../../../src/store/fvtt/document/EmbeddedStoreManager.js","../../../../src/store/fvtt/document/TJSDocument.js","../../../../src/store/fvtt/document/TJSDocumentCollection.js"],"sourcesContent":["import { DynMapReducer }   from '#runtime/svelte/store/reducer';\r\n\r\nimport {\r\n   hasPrototype,\r\n   isObject }              from '#runtime/util/object';\r\n\r\n/**\r\n * Provides management of reactive embedded collections.\r\n *\r\n * @privateRemarks\r\n * TODO: Consider subscribing to TJSDocument rather than exposing {@link EmbeddedStoreManager.handleDocChange} and\r\n * {@link EmbeddedStoreManager.handleUpdate}\r\n */\r\nexport class EmbeddedStoreManager\r\n{\r\n   /**\r\n    * RegExp for detecting CRUD updates for renderContext.\r\n    *\r\n    * @type {RegExp}\r\n    */\r\n   static #renderContextRegex = /(?<action>create|delete|update)(?<sep>\\.?)(?<name>\\w+)/;\r\n\r\n   /**\r\n    * @type {Map<string, EmbeddedCollectionData<any>>}\r\n    */\r\n   #name = new Map();\r\n\r\n   /**\r\n    * @type {foundry.abstract.Document[]}\r\n    */\r\n   #document;\r\n\r\n   /**\r\n    * @type {Map<string, string>}\r\n    */\r\n   #collectionToDocName = new Map();\r\n\r\n   /**\r\n    * @type {Set<string>}\r\n    */\r\n   #embeddedNames = new Set();\r\n\r\n   /**\r\n    * @param {foundry.abstract.Document[]} document - The associated document holder.\r\n    */\r\n   constructor(document)\r\n   {\r\n      this.#document = document;\r\n\r\n      this.handleDocChange();\r\n\r\n      Object.seal(this);\r\n   }\r\n\r\n   /**\r\n    * @template [T=import('./types').NamedDocumentConstructor]\r\n    *\r\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\r\n    *\r\n    * @param {import('#runtime/svelte/store/reducer').DynOptionsMapCreate<string, T>} options - DynMapReducer\r\n    *        creation options.\r\n    *\r\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, T>} DynMapReducer instance.\r\n    */\r\n   create(FoundryDoc, options)\r\n   {\r\n      const docName = FoundryDoc?.documentName;\r\n\r\n      if (typeof docName !== 'string')\r\n      {\r\n         throw new TypeError(\r\n          `EmbeddedStoreManager.create error: 'FoundryDoc' does not have a valid 'documentName' property.`);\r\n      }\r\n\r\n      /** @type {foundry.abstract.Document} */\r\n      const doc = this.#document[0];\r\n\r\n      let collection = null;\r\n\r\n      if (doc)\r\n      {\r\n         try\r\n         {\r\n            collection = doc.getEmbeddedCollection(docName);\r\n         }\r\n         catch (err)\r\n         {\r\n            console.warn(`EmbeddedStoreManager.create error: No valid embedded collection for: ${docName}`);\r\n         }\r\n      }\r\n\r\n      let embeddedData;\r\n\r\n      if (!this.#name.has(docName))\r\n      {\r\n         embeddedData = {\r\n            collection,\r\n            stores: new Map()\r\n         };\r\n\r\n         this.#name.set(docName, embeddedData);\r\n      }\r\n      else\r\n      {\r\n         embeddedData = this.#name.get(docName);\r\n      }\r\n\r\n      /** @type {string} */\r\n      let name;\r\n\r\n      /** @type {import('#runtime/svelte/store/reducer').DynDataOptions<T>} */\r\n      let rest = {};\r\n\r\n      /** @type {import('#runtime/svelte/store/reducer').IDynMapReducerCtor<string, T>} */\r\n      let ctor;\r\n\r\n      if (typeof options === 'string')\r\n      {\r\n         name = options;\r\n         ctor = DynMapReducer;\r\n      }\r\n      else if (typeof options === 'function' && hasPrototype(options, DynMapReducer))\r\n      {\r\n         ctor = options;\r\n      }\r\n      else if (isObject(options))\r\n      {\r\n         ({ name, ctor = DynMapReducer, ...rest } = options);\r\n      }\r\n      else\r\n      {\r\n         throw new TypeError(`EmbeddedStoreManager.create error: 'options' does not conform to allowed parameters.`);\r\n      }\r\n\r\n      if (!hasPrototype(ctor, DynMapReducer))\r\n      {\r\n         throw new TypeError(`EmbeddedStoreManager.create error: 'ctor' is not a 'DynMapReducer'.`);\r\n      }\r\n\r\n      name = name ?? ctor?.name;\r\n\r\n      if (typeof name !== 'string')\r\n      {\r\n         throw new TypeError(`EmbeddedStoreManager.create error: 'name' is not a string.`);\r\n      }\r\n\r\n      if (embeddedData.stores.has(name))\r\n      {\r\n         return embeddedData.stores.get(name);\r\n      }\r\n      else\r\n      {\r\n         const storeOptions = collection ? { data: collection, ...rest } : { ...rest };\r\n         const store = new ctor(storeOptions);\r\n         embeddedData.stores.set(name, store);\r\n         return store;\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @template [T=import('./types').NamedDocumentConstructor]\r\n    *\r\n    * Destroys and removes embedded collection stores. Invoking this method with no parameters destroys all stores.\r\n    * Invoking with an embedded name destroys all stores for that particular collection. If you provide an embedded and\r\n    * store name just that particular store is destroyed and removed.\r\n    *\r\n    * @param {T}   [FoundryDoc] - A Foundry document class / constructor.\r\n    *\r\n    * @param {string}   [storeName] - Specific store name.\r\n    *\r\n    * @returns {boolean} One or more stores destroyed?\r\n    */\r\n   destroy(FoundryDoc, storeName)\r\n   {\r\n      let count = 0;\r\n\r\n      // Destroy all embedded stores\r\n      if (FoundryDoc === void 0)\r\n      {\r\n         for (const embeddedData of this.#name.values())\r\n         {\r\n            embeddedData.collection = null;\r\n            for (const store of embeddedData.stores.values())\r\n            {\r\n               store.destroy();\r\n               count++;\r\n            }\r\n         }\r\n\r\n         this.#name.clear();\r\n      }\r\n      else\r\n      {\r\n         const docName = FoundryDoc?.documentName;\r\n\r\n         if (typeof docName !== 'string')\r\n         {\r\n            throw new TypeError(\r\n             `EmbeddedStoreManager.delete error: 'FoundryDoc' does not have a valid 'documentName' property.`);\r\n         }\r\n\r\n         if (storeName === void 0)\r\n         {\r\n            const embeddedData = this.#name.get(docName);\r\n            if (embeddedData)\r\n            {\r\n               embeddedData.collection = null;\r\n               for (const store of embeddedData.stores.values())\r\n               {\r\n                  store.destroy();\r\n                  count++;\r\n               }\r\n            }\r\n\r\n            this.#name.delete(docName);\r\n         }\r\n         else if (storeName === 'string')\r\n         {\r\n            const embeddedData = this.#name.get(docName);\r\n            if (embeddedData)\r\n            {\r\n               const store = embeddedData.stores.get(storeName);\r\n               if (store)\r\n               {\r\n                  store.destroy();\r\n                  count++;\r\n               }\r\n            }\r\n         }\r\n      }\r\n\r\n      return count > 0;\r\n   }\r\n\r\n   /**\r\n    * @template [T=import('./types').NamedDocumentConstructor]\r\n    *\r\n    * @param {T} FoundryDoc - A Foundry document class / constructor.\r\n    *\r\n    * @param {string} storeName - Name of the embedded collection to retrieve.\r\n    *\r\n    * @returns {import('#runtime/svelte/store/reducer').DynMapReducer<string, InstanceType<T>>} DynMapReducer\r\n    *          instance.\r\n    */\r\n   get(FoundryDoc, storeName)\r\n   {\r\n      const docName = FoundryDoc?.documentName;\r\n\r\n      if (typeof docName !== 'string')\r\n      {\r\n         throw new TypeError(\r\n          `EmbeddedStoreManager.get error: 'FoundryDoc' does not have a valid 'documentName' property.`);\r\n      }\r\n\r\n      if (!this.#name.has(docName)) { return void 0; }\r\n\r\n      return this.#name.get(docName).stores.get(storeName);\r\n   }\r\n\r\n   /**\r\n    * Updates all existing embedded collection stores with the associated embedded collection\r\n    */\r\n   handleDocChange()\r\n   {\r\n      const doc = this.#document[0];\r\n\r\n      if (doc instanceof globalThis.foundry.abstract.Document)\r\n      {\r\n         const existingEmbeddedNames = new Set(this.#name.keys());\r\n\r\n         /** @type {[string, string][]} */\r\n         const embeddedNames = Object.entries(doc.constructor?.metadata?.embedded ?? []);\r\n\r\n         this.#collectionToDocName.clear();\r\n\r\n         // Remove all previously stored embedded name CRUD keys.\r\n         this.#embeddedNames.clear();\r\n\r\n         for (const [docName, collectionName] of embeddedNames)\r\n         {\r\n            // Remove processed embedded doc name from existingEmbeddedNames set.\r\n            existingEmbeddedNames.delete(docName);\r\n\r\n            // Update CRUD keys for v10.\r\n            this.#embeddedNames.add(`create${docName}`);\r\n            this.#embeddedNames.add(`delete${docName}`);\r\n            this.#embeddedNames.add(`update${docName}`);\r\n\r\n            // Update CRUD keys for v11.\r\n            this.#embeddedNames.add(`create.${collectionName}`);\r\n            this.#embeddedNames.add(`delete.${collectionName}`);\r\n            this.#embeddedNames.add(`update.${collectionName}`);\r\n\r\n            // Update CRUD keys for v12.\r\n            this.#embeddedNames.add(`create${collectionName}`);\r\n            this.#embeddedNames.add(`delete${collectionName}`);\r\n            this.#embeddedNames.add(`update${collectionName}`);\r\n\r\n            // v10 collection to doc name lookup.\r\n            this.#collectionToDocName.set(docName, docName);\r\n            this.#collectionToDocName.set(collectionName, docName);\r\n\r\n            let collection = null;\r\n\r\n            try\r\n            {\r\n               // Update any existing stores with the actual collection.\r\n               collection = doc.getEmbeddedCollection(docName);\r\n            }\r\n            catch (err)\r\n            {\r\n               console.warn(`EmbeddedStoreManager.handleDocUpdate error: No valid embedded collection for: ${docName}`);\r\n            }\r\n\r\n            // Update EmbeddedData for new collection.\r\n            const embeddedData = this.#name.get(docName);\r\n            if (embeddedData)\r\n            {\r\n               embeddedData.collection = collection;\r\n\r\n               // Update all existing stores.\r\n               for (const store of embeddedData.stores.values()) { store.setData(collection, true); }\r\n            }\r\n         }\r\n\r\n         // Update all existing embedded collections with null data that aren't processed above.\r\n         for (const embeddedName of existingEmbeddedNames)\r\n         {\r\n            const embeddedData = this.#name.get(embeddedName);\r\n            if (embeddedData)\r\n            {\r\n               embeddedData.collection = null;\r\n\r\n               for (const store of embeddedData.stores.values()) { store.setData(null, true); }\r\n            }\r\n         }\r\n      }\r\n      else // Reset all embedded reducer stores to null data.\r\n      {\r\n         this.#collectionToDocName.clear();\r\n         this.#embeddedNames.clear();\r\n\r\n         for (const embeddedData of this.#name.values())\r\n         {\r\n            embeddedData.collection = null;\r\n\r\n            for (const store of embeddedData.stores.values()) { store.setData(null, true); }\r\n         }\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Handles updates to embedded stores parsing the render context for valid embedded store types.\r\n    *\r\n    * On create, delete, update parse the type being modified then force index updates for the embedded type.\r\n    *\r\n    * @param {string}   renderContext - render context update from document.\r\n    */\r\n   handleUpdate(renderContext)\r\n   {\r\n      if (!this.#embeddedNames.has(renderContext)) { return; }\r\n\r\n      const match = EmbeddedStoreManager.#renderContextRegex.exec(renderContext);\r\n\r\n      if (match)\r\n      {\r\n         const docOrCollectionName = match.groups.name;\r\n         const embeddedName = this.#collectionToDocName.get(docOrCollectionName);\r\n\r\n         if (!this.#name.has(embeddedName)) { return; }\r\n\r\n         for (const store of this.#name.get(embeddedName).stores.values())\r\n         {\r\n            store.index.update(true);\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\n/**\r\n * @template T\r\n *\r\n * @typedef {object} EmbeddedCollectionData\r\n *\r\n * @property {foundry.abstract.Collection} collection -\r\n *\r\n * @property {Map<string, import('#runtime/svelte/store/reducer').DynMapReducer<string, T>>} stores -\r\n */\r\n","import { tick }                     from 'svelte';\n\nimport { Hashing }                  from '#runtime/util';\n\nimport {\n   isObject,\n   isPlainObject }                  from '#runtime/util/object';\n\nimport { EmbeddedStoreManager }     from './EmbeddedStoreManager.js';\n\n/**\n * @template [T=import('./types').NamedDocumentConstructor]\n *\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any Document / ClientMixinDocument.\n * This makes documents reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n */\nexport class TJSDocument\n{\n   /**\n    * Fake Application API that ClientDocumentMixin uses for document model callbacks.\n    *\n    * @type {{ close: Function, render: Function }}\n    */\n   #callbackAPI;\n\n   /**\n    * @type {T[]}\n    */\n   #document = [void 0];\n\n   /**\n    * @type {EmbeddedStoreManager}\n    */\n   #embeddedStoreManager;\n\n   /**\n    * @type {import('./types').EmbeddedAPI}\n    */\n   #embeddedAPI;\n\n   /**\n    * @type {string}\n    */\n   #uuidv4;\n\n   /**\n    * @type {{ delete?: Function, preDelete?: Function }}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   /**\n    * @type {((value: T, updateOptions?: TJSDocumentUpdateOptions) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSDocumentUpdateOptions}\n    */\n   #updateOptions;\n\n   /**\n    * @param {T | TJSDocumentOptions}  [document] - Document to wrap or TJSDocumentOptions.\n    *\n    * @param {TJSDocumentOptions}      [options] - TJSDocument options.\n    */\n   constructor(document, options = {})\n   {\n      this.#uuidv4 = `tjs-document-${Hashing.uuidv4()}`;\n\n      this.#callbackAPI = {\n         close: this.#deleted.bind(this),\n         render: this.#updateSubscribers.bind(this)\n      };\n\n      if (isPlainObject(document)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(document);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(document);\n      }\n   }\n\n   /**\n    * @returns {import('./types').EmbeddedAPI} Embedded store manager.\n    */\n   get embedded()\n   {\n      if (!this.#embeddedAPI)\n      {\n         this.#embeddedStoreManager = new EmbeddedStoreManager(this.#document);\n\n         /** @type {import('./types').EmbeddedAPI} */\n         this.#embeddedAPI = {\n            create: (doc, options) => this.#embeddedStoreManager.create(doc, options),\n            destroy: (doc, storeName) => this.#embeddedStoreManager.destroy(doc, storeName),\n            get: (doc, storeName) => this.#embeddedStoreManager.get(doc, storeName)\n         };\n      }\n\n      return this.#embeddedAPI;\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {TJSDocumentUpdateOptions} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuidv4() { return this.#uuidv4; }\n\n   /**\n    * Register the callback API with the underlying Foundry document.\n    */\n   #callbackRegister()\n   {\n      const doc = this.#document[0];\n      if (doc instanceof globalThis.foundry.abstract.Document && isObject(doc?.apps) && !doc.apps[this.#uuidv4])\n      {\n         doc.apps[this.#uuidv4] = this.#callbackAPI;\n      }\n   }\n\n   /**\n    * Unregister the callback API with the underlying Foundry document.\n    */\n   #callbackUnregister()\n   {\n      const doc = this.#document[0];\n      if (doc instanceof globalThis.foundry.abstract.Document)\n      {\n         delete doc?.apps?.[this.#uuidv4];\n      }\n   }\n\n   /**\n    * Handles cleanup when the document is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const doc = this.#document[0];\n\n      // Check to see if the document is still in the associated collection to determine if actually deleted.\n      if (doc instanceof globalThis.foundry.abstract.Document && !doc?.collection?.has(doc.id))\n      {\n         this.#setDocument(void 0);\n\n         if (typeof this.#options.preDelete === 'function') { await this.#options.preDelete(doc); }\n\n         this.#updateSubscribers(false, { action: 'delete', data: void 0 });\n\n         if (typeof this.#options.delete === 'function') { await this.#options.delete(doc); }\n\n         // Allow subscribers to be able to query `updateOptions` involving any reactive statements.\n         await tick();\n\n         this.#updateOptions = void 0;\n      }\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * ClientDocumentMixin `apps` tracking object.\n    */\n   destroy()\n   {\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.destroy();\n         this.#embeddedStoreManager = void 0;\n         this.#embeddedAPI = void 0;\n      }\n\n      this.#setDocument(void 0);\n\n      this.#options.delete = void 0;\n      this.#options.preDelete = void 0;\n\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @returns {T} Current document\n    */\n   get() { return this.#document[0]; }\n\n   /**\n    * Attempts to create a Foundry UUID from standard drop data. This may not work for all systems.\n    *\n    * @param {object}   data - Drop transfer data.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.compendium=true] - Accept compendium documents.\n    *\n    * @param {boolean}  [opts.world=true] - Accept world documents.\n    *\n    * @param {string[]} [opts.types] - Require the `data.type` to match entry in `types`.\n    *\n    * @returns {string|undefined} Foundry UUID for drop data.\n    */\n   static getUUIDFromDataTransfer(data, { compendium = true, world = true, types = void 0 } = {})\n   {\n      if (!isObject(data)) { return void 0; }\n      if (Array.isArray(types) && !types.includes(data.type)) { return void 0; }\n\n      let uuid = void 0;\n\n      if (typeof data.uuid === 'string') // v10 and above provides a full UUID.\n      {\n         const isCompendium = data.uuid.startsWith('Compendium');\n\n         if (isCompendium && compendium)\n         {\n            uuid = data.uuid;\n         }\n         else if (world)\n         {\n            uuid = data.uuid;\n         }\n      }\n\n      return uuid;\n   }\n\n\n   /**\n    * @param {T | undefined}  document - New document to set.\n    *\n    * @param {TJSDocumentUpdateOptions}   [options] - New document update options to set.\n    */\n   set(document, options = {})\n   {\n      if (document !== void 0 && !(document instanceof globalThis.foundry.abstract.Document))\n      {\n         throw new TypeError(`TJSDocument set error: 'document' is not a valid Document or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      // Only post an update if the document has changed.\n      if (this.#setDocument(document))\n      {\n         // Only add registration if there are current subscribers.\n         if (document instanceof globalThis.foundry.abstract.Document && this.#subscriptions.length)\n         {\n            this.#callbackRegister();\n         }\n\n         this.#updateSubscribers(false, { action: `tjs-set-${document === void 0 ? 'undefined' : 'new'}`, ...options });\n      }\n   }\n\n   /**\n    * Internally sets the new document being tracked.\n    *\n    * @param {T | undefined} doc -\n    *\n    * @returns {boolean} Whether the document changed.\n    */\n   #setDocument(doc)\n   {\n      const changed = doc !== this.#document[0];\n\n      // Unregister before setting new document state.\n      if (changed) { this.#callbackUnregister(); }\n\n      this.#document[0] = doc;\n\n      if (changed && this.#embeddedStoreManager) { this.#embeddedStoreManager.handleDocChange(); }\n\n      return changed;\n   }\n\n   /**\n    * Potentially sets new document from data transfer object.\n    *\n    * @param {object}   data - Document transfer data.\n    *\n    * @param {{ compendium?: boolean, world?: boolean, types?: string[] }}   [options] - Optional parameters for\n    *        {@link TJSDocument.getUUIDFromDataTransfer}.\n    *\n    * @returns {Promise<boolean>} Returns true if new document set from data transfer blob.\n    */\n   async setFromDataTransfer(data, options)\n   {\n      return this.setFromUUID(TJSDocument.getUUIDFromDataTransfer(data, options));\n   }\n\n   /**\n    * Sets the document by Foundry UUID performing a lookup and setting the document if found.\n    *\n    * @param {string}   uuid - A Foundry UUID to lookup.\n    *\n    * @param {TJSDocumentUpdateOptions}   [options] - New document update options to set.\n    *\n    * @returns {Promise<boolean>} True if successfully set document from UUID.\n    */\n   async setFromUUID(uuid, options = {})\n   {\n      if (typeof uuid !== 'string' || uuid.length === 0) { return false; }\n\n      try\n      {\n         const doc = await globalThis.fromUuid(uuid);\n\n         if (doc)\n         {\n            this.set(doc, options);\n            return true;\n         }\n      }\n      catch (err) { /**/ }\n\n      return false;\n   }\n\n   /**\n    * Sets options for this document wrapper / store.\n    *\n    * @param {TJSDocumentOptions}   options - Options for TJSDocument.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument error: 'options' is not a plain object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && options.delete !== null && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'delete' attribute in options is not a function or null.`);\n      }\n\n      if (options.preDelete !== void 0 && options.preDelete !== null && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(`TJSDocument error: 'preDelete' attribute in options is not a function or null.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete !== void 0)\n      {\n         this.#options.delete = typeof options.delete === 'function' ? options.delete : void 0;\n      }\n\n      if (options.preDelete !== void 0)\n      {\n         this.#options.preDelete = typeof options.preDelete === 'function' ? options.preDelete : void 0;\n      }\n   }\n\n   /**\n    * @param {(value: T, updateOptions?: TJSDocumentUpdateOptions) => void} handler - Callback function that is\n    * invoked on update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);           // Add handler to the array of subscribers.\n\n      // Register callback with first subscriber.\n      if (this.#subscriptions.length === 1) { this.#callbackRegister(); }\n\n      const updateOptions = { action: 'subscribe', data: void 0 };\n\n      handler(this.#document[0], updateOptions);      // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n\n         // Unsubscribe from document callback if there are no subscribers.\n         if (this.#subscriptions.length === 0) { this.#callbackUnregister(); }\n      };\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {TJSDocumentUpdateOptions}   [options] - Options from render call; will have document update context.\n    */\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      const doc = this.#document[0];\n\n      for (let cntr = 0; cntr < this.#subscriptions.length; cntr++) { this.#subscriptions[cntr](doc, options); }\n\n      if (this.#embeddedStoreManager)\n      {\n         this.#embeddedStoreManager.handleUpdate(options.renderContext);\n      }\n   }\n}\n\n/**\n * @typedef {object} TJSDocumentOptions\n *\n * @property {((doc?: object) => void) | null} [delete] Optional post delete function to invoke when\n * document is deleted _after_ subscribers have been notified.\n *\n * @property {((doc?: object) => void) | null} [preDelete] Optional pre delete function to invoke\n * when document is deleted _before_ subscribers are notified.\n */\n\n/**\n * @typedef TJSDocumentUpdateOptions Provides data regarding the latest document change.\n *\n * @property {string}   [action] The update action. Useful for filtering.\n *\n * @property {string}   [renderContext] The update action. Useful for filtering.\n *\n * @property {object[]|string[]} [data] Foundry data associated with document changes.\n */\n","import { tick }      from 'svelte';\n\nimport { Hashing }   from '#runtime/util';\n\nimport {\n   isObject,\n   isPlainObject }   from '#runtime/util/object';\n\n/**\n * Provides a wrapper implementing the Svelte store / subscriber protocol around any DocumentCollection. This makes\n * document collections reactive in a Svelte component, but otherwise provides subscriber functionality external to\n * Svelte.\n *\n * @template [T=DocumentCollection]\n */\nexport class TJSDocumentCollection\n{\n   /**\n    * Fake Application API that DocumentCollection uses for document model callbacks.\n    *\n    * @type {{ uuid: string, close: Function, render: Function }}\n    */\n   #callbackAPI;\n\n   /**\n    * @type {DocumentCollection}\n    */\n   #collection;\n\n   /**\n    * @type {string}\n    */\n   #uuidv4;\n\n   /**\n    * @type {{ delete?: Function, preDelete?: Function }}\n    */\n   #options = { delete: void 0, preDelete: void 0 };\n\n   /**\n    * @type {((value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void)[]}\n    */\n   #subscriptions = [];\n\n   /**\n    * @type {TJSDocumentCollectionUpdateOptions<T>}\n    */\n   #updateOptions;\n\n   /**\n    * @param {T | TJSDocumentCollectionOptions}   [collection] - Collection to wrap or TJSDocumentCollectionOptions.\n    *\n    * @param {TJSDocumentCollectionOptions}     [options] - TJSDocumentCollection options.\n    */\n   constructor(collection, options = {})\n   {\n      this.#uuidv4 = `tjs-collection-${Hashing.uuidv4()}`;\n\n      this.#callbackAPI = {\n         uuid: this.#uuidv4,\n         close: this.#deleted.bind(this),\n         render: this.#updateSubscribers.bind(this)\n      };\n\n      if (isPlainObject(collection)) // Handle case when only options are passed into ctor.\n      {\n         this.setOptions(collection);\n      }\n      else\n      {\n         this.setOptions(options);\n         this.set(collection);\n      }\n   }\n\n   /**\n    * Returns the options passed on last update.\n    *\n    * @returns {TJSDocumentCollectionUpdateOptions<T>} Last update options.\n    */\n   get updateOptions() { return this.#updateOptions ?? {}; }\n\n   /**\n    * Returns the UUID assigned to this store.\n    *\n    * @returns {string} UUID\n    */\n   get uuid() { return this.#uuidv4; }\n\n   /**\n    * Register the callback API with the underlying Foundry collection.\n    */\n   #callbackRegister()\n   {\n      const collection = this.#collection;\n\n      if (collection instanceof DocumentCollection && Array.isArray(collection?.apps))\n      {\n         const index = collection.apps.findIndex((sub) => sub === this.#callbackAPI);\n         if (index === -1) { collection.apps.push(this.#callbackAPI); }\n      }\n   }\n\n   /**\n    * Unregister the callback API with the underlying Foundry collection.\n    */\n   #callbackUnregister()\n   {\n      const collection = this.#collection;\n      if (collection instanceof DocumentCollection && Array.isArray(collection?.apps))\n      {\n         const index = collection.apps.findIndex((sub) => sub === this.#callbackAPI);\n         if (index >= 0) { collection.apps.splice(index, 1); }\n      }\n   }\n\n   /**\n    * Handles cleanup when the collection is deleted. Invoking any optional delete function set in the constructor.\n    *\n    * @returns {Promise<void>}\n    */\n   async #deleted()\n   {\n      const collection = this.#collection;\n\n      this.#callbackUnregister();\n      this.#collection = void 0;\n\n      if (typeof this.#options.preDelete === 'function') { await this.#options.preDelete(collection); }\n\n      this.#updateSubscribers(false,\n       { action: 'delete', documentType: collection.documentName, documents: [], data: [] });\n\n      if (typeof this.#options.delete === 'function') { await this.#options.delete(collection); }\n\n      // Allow subscribers to be able to query `updateOptions` involving any reactive statements.\n      await tick();\n\n      this.#updateOptions = void 0;\n   }\n\n   /**\n    * Completely removes all internal subscribers, any optional delete callback, and unregisters from the\n    * DocumentCollection `apps` tracking array.\n    */\n   destroy()\n   {\n      this.#callbackUnregister();\n      this.#collection = void 0;\n\n      this.#options.delete = void 0;\n      this.#options.preDelete = void 0;\n\n      this.#subscriptions.length = 0;\n   }\n\n   /**\n    * @returns {T} Current collection\n    */\n   get() { return this.#collection; }\n\n   /**\n    * @param {T | undefined}  collection - New collection to set.\n    *\n    * @param {TJSDocumentCollectionUpdateOptions<T>}  [options] - New collection update options to set.\n    */\n   set(collection, options = {})\n   {\n      if (collection !== void 0 && !(collection instanceof DocumentCollection))\n      {\n         throw new TypeError(\n          `TJSDocumentCollection set error: 'collection' is not a valid DocumentCollection or undefined.`);\n      }\n\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocument set error: 'options' is not an object.`);\n      }\n\n      const changed = this.#collection !== collection;\n\n      if (changed) { this.#callbackUnregister(); }\n\n      this.#collection = collection;\n      this.#updateOptions = options;\n\n      if (changed)\n      {\n         if (collection instanceof DocumentCollection && this.#subscriptions.length) { this.#callbackRegister(); }\n\n         this.#updateSubscribers(false,\n          { action: `tjs-set-${collection === void 0 ? 'undefined' : 'new'}`, ...options });\n      }\n   }\n\n   /**\n    * Sets options for this collection wrapper / store.\n    *\n    * @param {TJSDocumentCollectionOptions}   options - Options for TJSDocumentCollection.\n    */\n   setOptions(options)\n   {\n      if (!isObject(options))\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'options' is not an object.`);\n      }\n\n      // Verify valid values -------------\n\n      if (options.delete !== void 0 && options.delete !== null && typeof options.delete !== 'function')\n      {\n         throw new TypeError(`TJSDocumentCollection error: 'delete' attribute in options is not a function or null.`);\n      }\n\n      if (options.preDelete !== void 0 && options.preDelete !== null && typeof options.preDelete !== 'function')\n      {\n         throw new TypeError(\n          `TJSDocumentCollection error: 'preDelete' attribute in options is not a function or null.`);\n      }\n\n      // Set any valid values -------------\n\n      if (options.delete !== void 0)\n      {\n         this.#options.delete = typeof options.delete === 'function' ? options.delete : void 0;\n      }\n\n      if (options.preDelete !== void 0)\n      {\n         this.#options.preDelete = typeof options.preDelete === 'function' ? options.preDelete : void 0;\n      }\n   }\n\n   /**\n    * @param {(value: T, updateOptions?: TJSDocumentCollectionUpdateOptions<T>) => void} handler - Callback function\n    * that is invoked on update / changes.\n    *\n    * @returns {import('svelte/store').Unsubscriber} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler);              // Add handler to the array of subscribers.\n\n      // Register callback with first subscriber.\n      if (this.#subscriptions.length === 1) { this.#callbackRegister(); }\n\n      const collection = this.#collection;\n\n      const documentType = collection?.documentName ?? void 0;\n\n      const updateOptions = { action: 'subscribe', documentType, documents: [], data: [] };\n\n      handler(collection, updateOptions);  // Call handler with current value and update options.\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n\n         // Unsubscribe from collection if there are no subscribers.\n         if (this.#subscriptions.length === 0) { this.#callbackUnregister(); }\n      };\n   }\n\n   /**\n    * @param {boolean}  [force] - unused - signature from Foundry render function.\n    *\n    * @param {TJSDocumentCollectionUpdateOptions<T>}   [options] - Options from render call; will have collection\n    *        update context.\n    */\n   #updateSubscribers(force = false, options = {}) // eslint-disable-line no-unused-vars\n   {\n      this.#updateOptions = options;\n\n      const subscriptions = this.#subscriptions;\n      const collection = this.#collection;\n\n      for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](collection, options); }\n   }\n}\n\n/**\n * @typedef TJSDocumentCollectionOptions\n *\n * @property {((collection: DocumentCollection) => void) | null} [delete] Optional post delete function\n *           to invoke when document is deleted _after_ subscribers have been notified.\n *\n * @property {((collection: DocumentCollection) => void) | null} [preDelete] Optional pre delete function to\n *           invoke when document is deleted _before_ subscribers are notified.\n */\n\n/**\n * @template T\n * @typedef TJSDocumentCollectionUpdateOptions Provides data regarding the latest collection change.\n *\n * @property {string}   action The update action. Useful for filtering.\n *\n * @property {string}   documentType The document name.\n *\n * @property {T[]}      documents associated documents that changed.\n *\n * @property {object[]|string[]} data Foundry data associated with document changes.\n */\n"],"names":[],"mappings":"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"}