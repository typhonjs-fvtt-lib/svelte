{"version":3,"file":"index.js","sources":["../../../../../src/store/fvtt/settings/world/WorldSettingArrayStore.ts"],"sourcesContent":["import { CrudArrayObjectStore }  from '#runtime/svelte/store/reducer/array-object';\r\nimport { Hashing }               from '#runtime/util';\r\n\r\nimport type {\r\n   ArrayObjectStoreParams,\r\n   BaseObjectEntryStore,\r\n   CrudArrayObjectStoreParams,\r\n   ExtractDataType }             from '#runtime/svelte/store/reducer/array-object';\r\n\r\nimport type { TJSGameSettings }  from '#svelte-fvtt/store/fvtt/settings';\r\n\r\n/**\r\n * @typeParam S - Store type.\r\n */\r\nexport class WorldSettingArrayStore<S extends BaseObjectEntryStore<any>> extends CrudArrayObjectStore<S>\r\n{\r\n   /**\r\n    */\r\n   readonly #key: string;\r\n\r\n   /**\r\n    */\r\n   readonly #namespace: string;\r\n\r\n   /**\r\n    * @param options - WorldSettingArrayStore Options.\r\n    *\r\n    * @param options.namespace - Game setting 'namespace' field.\r\n    *\r\n    * @param options.key - Game setting 'key' field.\r\n    *\r\n    * @param [options.defaultData] - When an instance of TJSGameSettings is defined and automatic game setting\r\n    *        registered you may provide default data for the Foundry game setting.\r\n    *\r\n    * @param [options.gameSettings] - An instance of TJSGameSettings. If provided a world game setting will be\r\n    *        automatically registered for the given `namespace` and `key` with this instance as the associated game\r\n    *        setting store.\r\n    *\r\n    * @param options.rest - Rest of {@link CrudArrayObjectStoreParams} / {@link ArrayObjectStoreParams} parameters.\r\n    */\r\n   constructor({ namespace, key, defaultData = [], gameSettings, ...rest }: { namespace: string, key: string,\r\n    defaultData?: ExtractDataType<S>[], gameSettings?: TJSGameSettings } & CrudArrayObjectStoreParams<S>)\r\n   {\r\n      super({\r\n         ...rest,\r\n         extraData: { namespace, key }\r\n      });\r\n\r\n      if (typeof key !== 'string') { throw new TypeError(`'key' is not a string.`); }\r\n      if (typeof namespace !== 'string') { throw new TypeError(`'namespace' is not a string.`); }\r\n\r\n      this.#namespace = namespace;\r\n      this.#key = key;\r\n\r\n      if (!Array.isArray(defaultData)) { throw new TypeError(`'defaultData' is not an array.`); }\r\n\r\n      // Define default `id` if not provided in `defaultData` then create a random `UUIDv4` value.\r\n      for (const entry of defaultData)\r\n      {\r\n         if (typeof entry.id !== 'string') { entry.id = Hashing.uuidv4(); }\r\n      }\r\n\r\n      if (gameSettings)\r\n      {\r\n         gameSettings.register({\r\n            namespace,\r\n            key,\r\n            store: this,\r\n            options: {\r\n               scope: 'world',\r\n               config: false,\r\n               default: Array.isArray(defaultData) ? defaultData : [],\r\n               type: Array,\r\n               name: key\r\n            }\r\n         });\r\n      }\r\n   }\r\n\r\n   /**\r\n    * @returns The Foundry game setting key.\r\n    */\r\n   get key(): string { return this.#key; }\r\n\r\n   /**\r\n    * @returns The Foundry game setting namespace.\r\n    */\r\n   get namespace(): string { return this.#namespace; }\r\n}\r\n"],"names":[],"mappings":";;;AAWA;;AAEG;AACG,MAAO,sBAA4D,SAAQ,oBAAuB,CAAA;AAErG;AACG;AACM,IAAA,IAAI;AAEb;AACG;AACM,IAAA,UAAU;AAEnB;;;;;;;;;;;;;;;AAeG;AACH,IAAA,WAAA,CAAY,EAAE,SAAS,EAAE,GAAG,EAAE,WAAW,GAAG,EAAE,EAAE,YAAY,EAAE,GAAG,IAAI,EACgC,EAAA;AAElG,QAAA,KAAK,CAAC;AACH,YAAA,GAAG,IAAI;AACP,YAAA,SAAS,EAAE,EAAE,SAAS,EAAE,GAAG;AAC7B,SAAA,CAAC;AAEF,QAAA,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,sBAAA,CAAwB,CAAC;;AAC5E,QAAA,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,4BAAA,CAA8B,CAAC;;AAExF,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;AAC3B,QAAA,IAAI,CAAC,IAAI,GAAG,GAAG;QAEf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,MAAM,IAAI,SAAS,CAAC,CAAA,8BAAA,CAAgC,CAAC;;;AAGxF,QAAA,KAAK,MAAM,KAAK,IAAI,WAAW,EAC/B;AACG,YAAA,IAAI,OAAO,KAAK,CAAC,EAAE,KAAK,QAAQ,EAAE;AAAE,gBAAA,KAAK,CAAC,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE;;;QAGlE,IAAI,YAAY,EAChB;YACG,YAAY,CAAC,QAAQ,CAAC;gBACnB,SAAS;gBACT,GAAG;AACH,gBAAA,KAAK,EAAE,IAAI;AACX,gBAAA,OAAO,EAAE;AACN,oBAAA,KAAK,EAAE,OAAO;AACd,oBAAA,MAAM,EAAE,KAAK;AACb,oBAAA,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,WAAW,GAAG,EAAE;AACtD,oBAAA,IAAI,EAAE,KAAK;AACX,oBAAA,IAAI,EAAE;AACR;AACH,aAAA,CAAC;;;AAIR;;AAEG;IACH,IAAI,GAAG,KAAa,OAAO,IAAI,CAAC,IAAI,CAAC;AAErC;;AAEG;IACH,IAAI,SAAS,KAAa,OAAO,IAAI,CAAC,UAAU,CAAC;AACnD;;;;"}