{"version":3,"file":"index.js","sources":["../../src/helper/legacy/radioBoxes.js","../../src/helper/legacy/selectOptions.js"],"sourcesContent":["/**\r\n * A helper to create a set of radio checkbox input elements in a named set.\r\n * The provided keys are the possible radio values while the provided values are human readable labels.\r\n *\r\n * @param {string} name         The radio checkbox field name\r\n *\r\n * @param {object} choices      A mapping of radio checkbox values to human readable labels\r\n *\r\n * @param {object} options      Options which customize the radio boxes creation\r\n *\r\n * @param {string} options.checked    Which key is currently checked?\r\n *\r\n * @param {boolean} options.localize  Pass each label through string localization?\r\n *\r\n * @returns {string} HTML for radio boxes.\r\n *\r\n * @example <caption>The provided input data</caption>\r\n * let groupName = \"importantChoice\";\r\n * let choices = {a: \"Choice A\", b: \"Choice B\"};\r\n * let chosen = \"a\";\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <div class=\"form-group\">\r\n *   <label>Radio Group Label</label>\r\n *   <div class=\"form-fields\">\r\n *     {@html radioBoxes(groupName, choices, { checked: chosen, localize: true})}\r\n *   </div>\r\n * </div>\r\n */\r\nexport function radioBoxes(name, choices, options)\r\n{\r\n   const checked = options['checked'] || null;\r\n\r\n   const localize = options['localize'] || false;\r\n\r\n   let html = '';\r\n\r\n   for (let [key, label] of Object.entries(choices)) // eslint-disable-line prefer-const\r\n   {\r\n      if (localize) { label = globalThis.game.i18n.localize(label); }\r\n      const isChecked = checked === key;\r\n      html += `<label class=\"checkbox\"><input type=\"radio\" name=\"${name}\" value=\"${key}\" ${isChecked ? \"checked\" : \"\"}> ${label}</label>`;\r\n   }\r\n\r\n   return new globalThis.Handlebars.SafeString(html);\r\n}\r\n","/**\r\n * Converts the `selectOptions` Handlebars helper to be Svelte compatible. This is useful when initially converting\r\n * over an app to Svelte and for essential usage to several dialogs that mirror the core Foundry experience. For\r\n * an example of usage see {@link TJSDocumentOwnership}.\r\n *\r\n * A helper to create a set of <option> elements in a <select> block based on a provided dictionary.\r\n * The provided keys are the option values while the provided values are human-readable labels.\r\n * This helper supports both single-select and multi-select input fields.\r\n *\r\n * @param {object} choices                     A mapping of radio checkbox values to human-readable labels\r\n *\r\n * @param {object} options                     Helper options\r\n *\r\n * @param {string|string[]} [options.selected] Which key or array of keys that are currently selected?\r\n *\r\n * @param {boolean} [options.localize=false]   Pass each label through string localization?\r\n *\r\n * @param {string} [options.blank]             Add a blank option as the first option with this label\r\n *\r\n * @param {string} [options.nameAttr]          Look up a property in the choice object values to use as the option value\r\n *\r\n * @param {string} [options.labelAttr]         Look up a property in the choice object values to use as the option label\r\n *\r\n * @param {boolean} [options.inverted=false]   Use the choice object value as the option value, and the key as the label\r\n *                                             instead of vice-versa\r\n *\r\n * @param {boolean} [options.sort=false]       When true sort by label name.\r\n *\r\n * @returns {string} The <options> HTML element(s).\r\n *\r\n * @example <caption>The provided input data</caption>\r\n * let choices = {a: 'Choice A', b: 'Choice B'};\r\n * let value = 'a';\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <select name=\"importantChoice\">\r\n *   {@html selectOptions(choices { selected: value, localize: true })}\r\n * </select>\r\n *\r\n * @example <caption>The resulting HTML</caption>\r\n * <select name=\"importantChoice\">\r\n *   <option value=\"a\" selected>Choice A</option>\r\n *   <option value=\"b\">Choice B</option>\r\n * </select>\r\n *\r\n * @example <caption>Using inverted</caption>\r\n * let choices = {'Choice A': 'a', 'Choice B': 'b'};\r\n * let value = 'a';\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <select name=\"importantChoice\">\r\n *   {@html selectOptions(choices, { selected: value, inverted: true })}\r\n * </select>\r\n *\r\n * @example <caption>Using nameAttr and labelAttr with objects</caption>\r\n * let choices = {foo: {key: 'a', label: 'Choice A'}, bar: {key: 'b', label: 'Choice B'}};\r\n * let value = 'b';\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <select name=\"importantChoice\">\r\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\r\n * </select>\r\n *\r\n * @example <caption>Using nameAttr and labelAttr with arrays</caption>\r\n * let choices = [{key: 'a', label: 'Choice A'}, {key: 'b', label: 'Choice B'}];\r\n * let value = 'b';\r\n *\r\n * @example <caption>The template HTML structure</caption>\r\n * <select name=\"importantChoice\">\r\n *   {@html selectOptions(choices, { selected: value, nameAttr: 'key', labelAttr: 'label' })}\r\n * </select>\r\n */\r\nexport function selectOptions(choices, options)\r\n{\r\n   const { localize = false, blank = null, sort = false, nameAttr, labelAttr, inverted } = options;\r\n   let { selected = null } = options;\r\n\r\n   selected = selected instanceof Array ? selected.map(String) : [String(selected)];\r\n\r\n   // Prepare the choices as an array of objects\r\n   const selectChoices = [];\r\n\r\n   if (choices instanceof Array)\r\n   {\r\n      for (const choice of choices)\r\n      {\r\n         const name = String(choice[nameAttr]);\r\n         let label = choice[labelAttr];\r\n         if (localize) { label = globalThis.game.i18n.localize(label); }\r\n         selectChoices.push({ name, label });\r\n      }\r\n   }\r\n   else\r\n   {\r\n      for (const choice of Object.entries(choices))\r\n      {\r\n         const [key, value] = inverted ? choice.reverse() : choice;\r\n         const name = String(nameAttr ? value[nameAttr] : key);\r\n         let label = labelAttr ? value[labelAttr] : value;\r\n         if (localize) { label = globalThis.game.i18n.localize(label); }\r\n         selectChoices.push({ name, label });\r\n      }\r\n   }\r\n\r\n   // Sort the array of options\r\n   if (sort) { selectChoices.sort((a, b) => a.label.localeCompare(b.label)); }\r\n\r\n   // Prepend a blank option\r\n   if (blank !== null)\r\n   {\r\n      const label = localize ? globalThis.game.i18n.localize(blank) : blank;\r\n      selectChoices.unshift({ name: '', label });\r\n   }\r\n\r\n   // Create the HTML\r\n   let html = '';\r\n   for (const option of selectChoices)\r\n   {\r\n      const label = globalThis.Handlebars.escapeExpression(option.label);\r\n      const isSelected = selected.includes(option.name);\r\n      html += `<option value=\"${option.name}\" ${isSelected ? \"selected\" : \"\"}>${label}</option>`;\r\n   }\r\n\r\n   return new globalThis.Handlebars.SafeString(html);\r\n}\r\n"],"names":[],"mappings":"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"}